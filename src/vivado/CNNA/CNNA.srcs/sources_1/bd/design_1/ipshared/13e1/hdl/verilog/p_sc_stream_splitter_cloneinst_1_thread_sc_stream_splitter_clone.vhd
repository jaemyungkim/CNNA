-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity p_sc_stream_splitter_cloneinst_1_thread_sc_stream_splitter_clone is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    din_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    din_empty_n : IN STD_LOGIC;
    din_read : OUT STD_LOGIC;
    dout_0_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    dout_0_full_n : IN STD_LOGIC;
    dout_0_write : OUT STD_LOGIC;
    dout_1_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    dout_1_full_n : IN STD_LOGIC;
    dout_1_write : OUT STD_LOGIC;
    dout_2_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    dout_2_full_n : IN STD_LOGIC;
    dout_2_write : OUT STD_LOGIC;
    dout_3_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    dout_3_full_n : IN STD_LOGIC;
    dout_3_write : OUT STD_LOGIC;
    dout_4_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    dout_4_full_n : IN STD_LOGIC;
    dout_4_write : OUT STD_LOGIC;
    dout_5_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    dout_5_full_n : IN STD_LOGIC;
    dout_5_write : OUT STD_LOGIC;
    dout_6_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    dout_6_full_n : IN STD_LOGIC;
    dout_6_write : OUT STD_LOGIC;
    dout_7_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    dout_7_full_n : IN STD_LOGIC;
    dout_7_write : OUT STD_LOGIC );
end;


architecture behav of p_sc_stream_splitter_cloneinst_1_thread_sc_stream_splitter_clone is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";

    signal dout_0_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal p_emptyn_reg_170 : STD_LOGIC_VECTOR (0 downto 0);
    signal dout_1_blk_n : STD_LOGIC;
    signal dout_2_blk_n : STD_LOGIC;
    signal dout_3_blk_n : STD_LOGIC;
    signal dout_4_blk_n : STD_LOGIC;
    signal dout_5_blk_n : STD_LOGIC;
    signal dout_6_blk_n : STD_LOGIC;
    signal dout_7_blk_n : STD_LOGIC;
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal select_ln226_fu_151_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln226_reg_174 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal p_017_022_fu_74 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_sc_stream_splitter_s_nbread_fu_78_p2_0 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                p_017_022_fu_74 <= select_ln226_fu_151_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                p_emptyn_reg_170 <= p_sc_stream_splitter_s_nbread_fu_78_p2_0;
                select_ln226_reg_174 <= select_ln226_fu_151_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(dout_0_full_n, dout_1_full_n, dout_2_full_n, dout_3_full_n, dout_4_full_n, dout_5_full_n, dout_6_full_n, dout_7_full_n, ap_enable_reg_pp0_iter1, p_emptyn_reg_170)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((p_emptyn_reg_170 = ap_const_lv1_1) and (dout_7_full_n = ap_const_logic_0)) or ((p_emptyn_reg_170 = ap_const_lv1_1) and (dout_6_full_n = ap_const_logic_0)) or ((p_emptyn_reg_170 = ap_const_lv1_1) and (dout_5_full_n = ap_const_logic_0)) or ((p_emptyn_reg_170 = ap_const_lv1_1) and (dout_4_full_n = ap_const_logic_0)) or ((p_emptyn_reg_170 = ap_const_lv1_1) and (dout_3_full_n = ap_const_logic_0)) or ((p_emptyn_reg_170 = ap_const_lv1_1) and (dout_2_full_n = ap_const_logic_0)) or ((p_emptyn_reg_170 = ap_const_lv1_1) and (dout_1_full_n = ap_const_logic_0)) or ((p_emptyn_reg_170 = ap_const_lv1_1) and (dout_0_full_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(dout_0_full_n, dout_1_full_n, dout_2_full_n, dout_3_full_n, dout_4_full_n, dout_5_full_n, dout_6_full_n, dout_7_full_n, ap_enable_reg_pp0_iter1, p_emptyn_reg_170)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((p_emptyn_reg_170 = ap_const_lv1_1) and (dout_7_full_n = ap_const_logic_0)) or ((p_emptyn_reg_170 = ap_const_lv1_1) and (dout_6_full_n = ap_const_logic_0)) or ((p_emptyn_reg_170 = ap_const_lv1_1) and (dout_5_full_n = ap_const_logic_0)) or ((p_emptyn_reg_170 = ap_const_lv1_1) and (dout_4_full_n = ap_const_logic_0)) or ((p_emptyn_reg_170 = ap_const_lv1_1) and (dout_3_full_n = ap_const_logic_0)) or ((p_emptyn_reg_170 = ap_const_lv1_1) and (dout_2_full_n = ap_const_logic_0)) or ((p_emptyn_reg_170 = ap_const_lv1_1) and (dout_1_full_n = ap_const_logic_0)) or ((p_emptyn_reg_170 = ap_const_lv1_1) and (dout_0_full_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(dout_0_full_n, dout_1_full_n, dout_2_full_n, dout_3_full_n, dout_4_full_n, dout_5_full_n, dout_6_full_n, dout_7_full_n, ap_enable_reg_pp0_iter1, p_emptyn_reg_170)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((p_emptyn_reg_170 = ap_const_lv1_1) and (dout_7_full_n = ap_const_logic_0)) or ((p_emptyn_reg_170 = ap_const_lv1_1) and (dout_6_full_n = ap_const_logic_0)) or ((p_emptyn_reg_170 = ap_const_lv1_1) and (dout_5_full_n = ap_const_logic_0)) or ((p_emptyn_reg_170 = ap_const_lv1_1) and (dout_4_full_n = ap_const_logic_0)) or ((p_emptyn_reg_170 = ap_const_lv1_1) and (dout_3_full_n = ap_const_logic_0)) or ((p_emptyn_reg_170 = ap_const_lv1_1) and (dout_2_full_n = ap_const_logic_0)) or ((p_emptyn_reg_170 = ap_const_lv1_1) and (dout_1_full_n = ap_const_logic_0)) or ((p_emptyn_reg_170 = ap_const_lv1_1) and (dout_0_full_n = ap_const_logic_0))));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(dout_0_full_n, dout_1_full_n, dout_2_full_n, dout_3_full_n, dout_4_full_n, dout_5_full_n, dout_6_full_n, dout_7_full_n, p_emptyn_reg_170)
    begin
                ap_block_state3_pp0_stage0_iter1 <= (((p_emptyn_reg_170 = ap_const_lv1_1) and (dout_7_full_n = ap_const_logic_0)) or ((p_emptyn_reg_170 = ap_const_lv1_1) and (dout_6_full_n = ap_const_logic_0)) or ((p_emptyn_reg_170 = ap_const_lv1_1) and (dout_5_full_n = ap_const_logic_0)) or ((p_emptyn_reg_170 = ap_const_lv1_1) and (dout_4_full_n = ap_const_logic_0)) or ((p_emptyn_reg_170 = ap_const_lv1_1) and (dout_3_full_n = ap_const_logic_0)) or ((p_emptyn_reg_170 = ap_const_lv1_1) and (dout_2_full_n = ap_const_logic_0)) or ((p_emptyn_reg_170 = ap_const_lv1_1) and (dout_1_full_n = ap_const_logic_0)) or ((p_emptyn_reg_170 = ap_const_lv1_1) and (dout_0_full_n = ap_const_logic_0)));
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    din_read_assign_proc : process(din_empty_n, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (din_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            din_read <= ap_const_logic_1;
        else 
            din_read <= ap_const_logic_0;
        end if; 
    end process;


    dout_0_blk_n_assign_proc : process(dout_0_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, p_emptyn_reg_170)
    begin
        if (((p_emptyn_reg_170 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dout_0_blk_n <= dout_0_full_n;
        else 
            dout_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dout_0_din <= select_ln226_reg_174;

    dout_0_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, p_emptyn_reg_170, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (p_emptyn_reg_170 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dout_0_write <= ap_const_logic_1;
        else 
            dout_0_write <= ap_const_logic_0;
        end if; 
    end process;


    dout_1_blk_n_assign_proc : process(dout_1_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, p_emptyn_reg_170)
    begin
        if (((p_emptyn_reg_170 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dout_1_blk_n <= dout_1_full_n;
        else 
            dout_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dout_1_din <= select_ln226_reg_174;

    dout_1_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, p_emptyn_reg_170, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (p_emptyn_reg_170 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dout_1_write <= ap_const_logic_1;
        else 
            dout_1_write <= ap_const_logic_0;
        end if; 
    end process;


    dout_2_blk_n_assign_proc : process(dout_2_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, p_emptyn_reg_170)
    begin
        if (((p_emptyn_reg_170 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dout_2_blk_n <= dout_2_full_n;
        else 
            dout_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dout_2_din <= select_ln226_reg_174;

    dout_2_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, p_emptyn_reg_170, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (p_emptyn_reg_170 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dout_2_write <= ap_const_logic_1;
        else 
            dout_2_write <= ap_const_logic_0;
        end if; 
    end process;


    dout_3_blk_n_assign_proc : process(dout_3_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, p_emptyn_reg_170)
    begin
        if (((p_emptyn_reg_170 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dout_3_blk_n <= dout_3_full_n;
        else 
            dout_3_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dout_3_din <= select_ln226_reg_174;

    dout_3_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, p_emptyn_reg_170, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (p_emptyn_reg_170 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dout_3_write <= ap_const_logic_1;
        else 
            dout_3_write <= ap_const_logic_0;
        end if; 
    end process;


    dout_4_blk_n_assign_proc : process(dout_4_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, p_emptyn_reg_170)
    begin
        if (((p_emptyn_reg_170 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dout_4_blk_n <= dout_4_full_n;
        else 
            dout_4_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dout_4_din <= select_ln226_reg_174;

    dout_4_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, p_emptyn_reg_170, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (p_emptyn_reg_170 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dout_4_write <= ap_const_logic_1;
        else 
            dout_4_write <= ap_const_logic_0;
        end if; 
    end process;


    dout_5_blk_n_assign_proc : process(dout_5_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, p_emptyn_reg_170)
    begin
        if (((p_emptyn_reg_170 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dout_5_blk_n <= dout_5_full_n;
        else 
            dout_5_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dout_5_din <= select_ln226_reg_174;

    dout_5_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, p_emptyn_reg_170, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (p_emptyn_reg_170 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dout_5_write <= ap_const_logic_1;
        else 
            dout_5_write <= ap_const_logic_0;
        end if; 
    end process;


    dout_6_blk_n_assign_proc : process(dout_6_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, p_emptyn_reg_170)
    begin
        if (((p_emptyn_reg_170 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dout_6_blk_n <= dout_6_full_n;
        else 
            dout_6_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dout_6_din <= select_ln226_reg_174;

    dout_6_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, p_emptyn_reg_170, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (p_emptyn_reg_170 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dout_6_write <= ap_const_logic_1;
        else 
            dout_6_write <= ap_const_logic_0;
        end if; 
    end process;


    dout_7_blk_n_assign_proc : process(dout_7_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, p_emptyn_reg_170)
    begin
        if (((p_emptyn_reg_170 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dout_7_blk_n <= dout_7_full_n;
        else 
            dout_7_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dout_7_din <= select_ln226_reg_174;

    dout_7_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, p_emptyn_reg_170, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (p_emptyn_reg_170 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dout_7_write <= ap_const_logic_1;
        else 
            dout_7_write <= ap_const_logic_0;
        end if; 
    end process;

    p_sc_stream_splitter_s_nbread_fu_78_p2_0 <= (0=>(din_empty_n), others=>'-');
    select_ln226_fu_151_p3 <= 
        din_dout when (p_sc_stream_splitter_s_nbread_fu_78_p2_0(0) = '1') else 
        p_017_022_fu_74;
end behav;
