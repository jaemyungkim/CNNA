-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity p_sc_stream_circularlinebuffer_shift_thread_shift is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    din_0_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    din_0_empty_n : IN STD_LOGIC;
    din_0_read : OUT STD_LOGIC;
    din_1_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    din_1_empty_n : IN STD_LOGIC;
    din_1_read : OUT STD_LOGIC;
    din_2_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    din_2_empty_n : IN STD_LOGIC;
    din_2_read : OUT STD_LOGIC;
    din_3_dout : IN STD_LOGIC;
    din_3_empty_n : IN STD_LOGIC;
    din_3_read : OUT STD_LOGIC;
    din_4_dout : IN STD_LOGIC;
    din_4_empty_n : IN STD_LOGIC;
    din_4_read : OUT STD_LOGIC;
    din_5_dout : IN STD_LOGIC;
    din_5_empty_n : IN STD_LOGIC;
    din_5_read : OUT STD_LOGIC;
    din_6_dout : IN STD_LOGIC;
    din_6_empty_n : IN STD_LOGIC;
    din_6_read : OUT STD_LOGIC;
    din_7_dout : IN STD_LOGIC;
    din_7_empty_n : IN STD_LOGIC;
    din_7_read : OUT STD_LOGIC;
    din_8_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    din_8_empty_n : IN STD_LOGIC;
    din_8_read : OUT STD_LOGIC;
    din_9_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    din_9_empty_n : IN STD_LOGIC;
    din_9_read : OUT STD_LOGIC;
    dout_0_din : OUT STD_LOGIC_VECTOR (383 downto 0);
    dout_0_full_n : IN STD_LOGIC;
    dout_0_write : OUT STD_LOGIC;
    dout_1_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    dout_1_full_n : IN STD_LOGIC;
    dout_1_write : OUT STD_LOGIC;
    dout_2_din : OUT STD_LOGIC_VECTOR (47 downto 0);
    dout_2_full_n : IN STD_LOGIC;
    dout_2_write : OUT STD_LOGIC;
    ctrl_0_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    ctrl_0_empty_n : IN STD_LOGIC;
    ctrl_0_read : OUT STD_LOGIC;
    ctrl_1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    ctrl_1_empty_n : IN STD_LOGIC;
    ctrl_1_read : OUT STD_LOGIC;
    ctrl_2_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    ctrl_2_empty_n : IN STD_LOGIC;
    ctrl_2_read : OUT STD_LOGIC;
    ctrl_3_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    ctrl_3_empty_n : IN STD_LOGIC;
    ctrl_3_read : OUT STD_LOGIC;
    ctrl_4_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    ctrl_4_empty_n : IN STD_LOGIC;
    ctrl_4_read : OUT STD_LOGIC;
    ctrl_5_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    ctrl_5_empty_n : IN STD_LOGIC;
    ctrl_5_read : OUT STD_LOGIC;
    ctrl_6_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    ctrl_6_empty_n : IN STD_LOGIC;
    ctrl_6_read : OUT STD_LOGIC;
    ctrl_7_dout : IN STD_LOGIC;
    ctrl_7_empty_n : IN STD_LOGIC;
    ctrl_7_read : OUT STD_LOGIC );
end;


architecture behav of p_sc_stream_circularlinebuffer_shift_thread_shift is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (13 downto 0) := "00000000001000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (13 downto 0) := "00000000100000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (13 downto 0) := "00000001000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (13 downto 0) := "00000010000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (13 downto 0) := "00000100000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (13 downto 0) := "00001000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (13 downto 0) := "00010000000000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (13 downto 0) := "00100000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (13 downto 0) := "01000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (13 downto 0) := "10000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv128_lc_1 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv384_lc_1 : STD_LOGIC_VECTOR (383 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv48_0 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";

    signal din_0_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal din_1_blk_n : STD_LOGIC;
    signal din_2_blk_n : STD_LOGIC;
    signal din_3_blk_n : STD_LOGIC;
    signal din_4_blk_n : STD_LOGIC;
    signal din_5_blk_n : STD_LOGIC;
    signal din_6_blk_n : STD_LOGIC;
    signal din_7_blk_n : STD_LOGIC;
    signal din_8_blk_n : STD_LOGIC;
    signal din_9_blk_n : STD_LOGIC;
    signal dout_0_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal val_EOP_reg_1801 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln178_reg_1829 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal val_EOP_2_reg_1633 : STD_LOGIC_VECTOR (0 downto 0);
    signal val_col_skip_reg_1624 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal icmp_ln249_reg_1665 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln249_reg_1665_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal val_fc_reg_1590 : STD_LOGIC_VECTOR (0 downto 0);
    signal dout_1_blk_n : STD_LOGIC;
    signal dout_2_blk_n : STD_LOGIC;
    signal ctrl_0_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ctrl_1_blk_n : STD_LOGIC;
    signal ctrl_2_blk_n : STD_LOGIC;
    signal ctrl_3_blk_n : STD_LOGIC;
    signal ctrl_4_blk_n : STD_LOGIC;
    signal ctrl_5_blk_n : STD_LOGIC;
    signal ctrl_6_blk_n : STD_LOGIC;
    signal ctrl_7_blk_n : STD_LOGIC;
    signal sr_next_next_elem_pt_2_reg_347 : STD_LOGIC_VECTOR (31 downto 0);
    signal sr_next_elem_ptr_wri_2_reg_357 : STD_LOGIC_VECTOR (31 downto 0);
    signal sr_elem_ptr_write_2_reg_367 : STD_LOGIC_VECTOR (31 downto 0);
    signal sr_next_next_elem_pt_4_reg_377 : STD_LOGIC_VECTOR (31 downto 0);
    signal sr_next_elem_ptr_wri_4_reg_390 : STD_LOGIC_VECTOR (31 downto 0);
    signal sr_elem_ptr_write_3_reg_403 : STD_LOGIC_VECTOR (31 downto 0);
    signal i4_0_in_reg_427 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_fc_V_2_1_reg_499 : STD_LOGIC_VECTOR (127 downto 0);
    signal output_fc_V_1_1_reg_508 : STD_LOGIC_VECTOR (127 downto 0);
    signal output_fc_V_0_1_reg_517 : STD_LOGIC_VECTOR (127 downto 0);
    signal t_V_3_reg_526 : STD_LOGIC_VECTOR (1 downto 0);
    signal output_fc_V_2_3_reg_576 : STD_LOGIC_VECTOR (127 downto 0);
    signal output_fc_V_1_3_reg_592 : STD_LOGIC_VECTOR (127 downto 0);
    signal output_fc_V_0_3_reg_608 : STD_LOGIC_VECTOR (127 downto 0);
    signal p_0190_2_reg_624 : STD_LOGIC_VECTOR (1 downto 0);
    signal io_acc_block_signal_op75 : STD_LOGIC;
    signal val_window_size_pkg_reg_1567 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_stride_step_pkg_reg_1572 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_window_size_reg_1577 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_replay_reg_1584 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_fc_fu_729_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal stide_equal_window_fu_733_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal stide_equal_window_reg_1594 : STD_LOGIC_VECTOR (0 downto 0);
    signal pure_stream_fu_745_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal pure_stream_reg_1599 : STD_LOGIC_VECTOR (0 downto 0);
    signal val_window_elem_V_7_reg_1604 : STD_LOGIC_VECTOR (127 downto 0);
    signal io_acc_block_signal_op101 : STD_LOGIC;
    signal ap_block_state5_pp0_stage0_iter0 : BOOLEAN;
    signal io_acc_block_signal_op147 : STD_LOGIC;
    signal ap_predicate_op147_write_state6 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal val_window_next_elem_reg_1609 : STD_LOGIC_VECTOR (127 downto 0);
    signal val_window_next_next_reg_1614 : STD_LOGIC_VECTOR (127 downto 0);
    signal val_skip_reg_1619 : STD_LOGIC_VECTOR (0 downto 0);
    signal val_eol_reg_1628 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_647_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln230_fu_851_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln230_reg_1637 : STD_LOGIC_VECTOR (0 downto 0);
    signal N_re_fu_1009_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal N_re_reg_1641 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal icmp_ln234_fu_1018_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal i_re_fu_1023_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_re_reg_1650 : STD_LOGIC_VECTOR (30 downto 0);
    signal pre_stream_fu_1029_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal pre_stream_reg_1655 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln243_fu_1034_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln249_fu_1040_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state10_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state11_pp1_stage0_iter1 : BOOLEAN;
    signal io_acc_block_signal_op250 : STD_LOGIC;
    signal ap_block_state12_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal start_pos_fu_1046_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal start_pos_reg_1669 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal grp_fu_651_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln258_reg_1674 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln258_reg_1674_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln69_fu_1062_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln69_fu_1074_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln69_1_fu_1080_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_665_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln258_1_reg_1708 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln258_1_reg_1708_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln69_1_fu_1092_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln69_1_fu_1104_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln69_5_fu_1110_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_671_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln258_2_reg_1742 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln258_2_reg_1742_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln69_2_fu_1122_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln69_2_fu_1134_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln69_7_fu_1140_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal raw_out_tlast_V_1_fu_1157_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal raw_out_tlast_V_1_reg_1776 : STD_LOGIC_VECTOR (0 downto 0);
    signal raw_out_tlast_V_1_reg_1776_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal val_tlast_reg_1796 : STD_LOGIC_VECTOR (0 downto 0);
    signal io_acc_block_signal_op268 : STD_LOGIC;
    signal ap_block_state15_pp2_stage0_iter0 : BOOLEAN;
    signal io_acc_block_signal_op299 : STD_LOGIC;
    signal ap_predicate_op299_write_state16 : BOOLEAN;
    signal ap_block_state16_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal t_V_fu_1381_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln178_fu_1399_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln178_reg_1809 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln178_fu_1405_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_data_V_1_fu_1418_p4 : STD_LOGIC_VECTOR (383 downto 0);
    signal tmp_data_V_1_reg_1833 : STD_LOGIC_VECTOR (383 downto 0);
    signal icmp_ln204_fu_1438_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln204_reg_1838 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_predicate_tran6to7_state5 : BOOLEAN;
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state10 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal sr_elem_regs_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal sr_elem_regs_V_ce0 : STD_LOGIC;
    signal sr_elem_regs_V_we0 : STD_LOGIC;
    signal sr_elem_regs_V_q0 : STD_LOGIC_VECTOR (127 downto 0);
    signal sr_next_elem_regs_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal sr_next_elem_regs_V_ce0 : STD_LOGIC;
    signal sr_next_elem_regs_V_we0 : STD_LOGIC;
    signal sr_next_elem_regs_V_q0 : STD_LOGIC_VECTOR (127 downto 0);
    signal sr_next_next_elem_re_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal sr_next_next_elem_re_ce0 : STD_LOGIC;
    signal sr_next_next_elem_re_we0 : STD_LOGIC;
    signal sr_next_next_elem_re_q0 : STD_LOGIC_VECTOR (127 downto 0);
    signal sr_next_next_elem_pt_1_reg_317 : STD_LOGIC_VECTOR (31 downto 0);
    signal sr_next_elem_ptr_wri_1_reg_327 : STD_LOGIC_VECTOR (31 downto 0);
    signal sr_elem_ptr_write_1_reg_337 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_sr_next_next_elem_pt_2_phi_fu_350_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_sr_next_elem_ptr_wri_2_phi_fu_360_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_sr_elem_ptr_write_2_phi_fu_370_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_sr_next_next_elem_pt_4_reg_377 : STD_LOGIC_VECTOR (31 downto 0);
    signal sr_next_next_elem_pt_5_fu_842_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_sr_next_elem_ptr_wri_4_reg_390 : STD_LOGIC_VECTOR (31 downto 0);
    signal sr_next_elem_ptr_wri_5_fu_816_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_sr_elem_ptr_write_3_reg_403 : STD_LOGIC_VECTOR (31 downto 0);
    signal sr_elem_ptr_write_fu_790_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_re_0_reg_416 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_phi_mux_i4_0_in_phi_fu_430_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln69_reg_436 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln69_reg_436 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln69_1_reg_445 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln69_1_reg_445 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter0_phi_ln69_2_reg_454 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter1_phi_ln69_2_reg_454 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_output_tmp_V_load_0_phi_fu_467_p4 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_phi_reg_pp1_iter2_output_tmp_V_load_0_reg_463 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_phi_reg_pp1_iter0_output_tmp_V_load_0_reg_463 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_phi_reg_pp1_iter1_output_tmp_V_load_0_reg_463 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_phi_mux_output_tmp_V_load_1_phi_fu_479_p4 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_phi_reg_pp1_iter2_output_tmp_V_load_1_reg_475 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_phi_reg_pp1_iter0_output_tmp_V_load_1_reg_475 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_phi_reg_pp1_iter1_output_tmp_V_load_1_reg_475 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_phi_mux_storemerge_2_phi_fu_491_p4 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_phi_reg_pp1_iter2_storemerge_2_reg_487 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_phi_reg_pp1_iter0_storemerge_2_reg_487 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_phi_reg_pp1_iter1_storemerge_2_reg_487 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_phi_mux_output_fc_V_2_1_phi_fu_502_p4 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_phi_mux_output_fc_V_1_1_phi_fu_511_p4 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_phi_mux_output_fc_V_0_1_phi_fu_520_p4 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_phi_mux_t_V_3_phi_fu_530_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_mux_output_fc_V_2_2_phi_fu_540_p6 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_phi_reg_pp2_iter0_output_fc_V_2_2_reg_537 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_phi_mux_output_fc_V_1_2_phi_fu_553_p6 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_phi_reg_pp2_iter0_output_fc_V_1_2_reg_550 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_phi_mux_output_fc_V_0_2_phi_fu_566_p6 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_phi_reg_pp2_iter0_output_fc_V_0_2_reg_563 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_phi_reg_pp2_iter0_output_fc_V_2_3_reg_576 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_phi_reg_pp2_iter0_output_fc_V_1_3_reg_592 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_phi_reg_pp2_iter0_output_fc_V_0_3_reg_608 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_phi_reg_pp2_iter0_p_0190_2_reg_624 : STD_LOGIC_VECTOR (1 downto 0);
    signal fc_ptr_V_fu_1411_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln63_fu_773_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln63_1_fu_799_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln63_2_fu_825_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln71_fu_1201_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln71_1_fu_1244_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln71_2_fu_1287_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sr_elem_ptr_write_4_fu_164 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal io_acc_block_signal_op255 : STD_LOGIC;
    signal ap_block_state14 : BOOLEAN;
    signal sr_next_elem_ptr_wri_fu_168 : STD_LOGIC_VECTOR (31 downto 0);
    signal sr_next_next_elem_pt_fu_172 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_window_elem_V_fu_176 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal val_window_elem_V_1_fu_180 : STD_LOGIC_VECTOR (127 downto 0);
    signal val_window_elem_V_2_fu_184 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_data_V_fu_877_p4 : STD_LOGIC_VECTOR (383 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_data_V_6_fu_1292_p4 : STD_LOGIC_VECTOR (383 downto 0);
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal ap_block_pp2_stage0_01001 : BOOLEAN;
    signal io_acc_block_signal_op303 : STD_LOGIC;
    signal raw_out_tlast_V_fu_989_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_tkeep_V_fu_888_p49 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_tkeep_V_6_fu_1303_p49 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_tkeep_V_1_fu_1444_p34 : STD_LOGIC_VECTOR (47 downto 0);
    signal grp_fu_656_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln200_fu_739_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln64_fu_778_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln64_fu_784_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln64_1_fu_804_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln64_1_fu_810_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln64_2_fu_830_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln64_2_fu_836_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln230_fu_851_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_in_window_next_n_fu_870_p3 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_in_window_next_e_fu_863_p3 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_in_window_elem_V_1_fu_856_p3 : STD_LOGIC_VECTOR (127 downto 0);
    signal or_ln233_fu_995_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln233_fu_999_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln233_fu_1005_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln234_fu_1014_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln69_fu_1056_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln69_3_fu_1068_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln69_4_fu_1086_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln69_6_fu_1098_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln69_2_fu_1116_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln69_8_fu_1128_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln242_fu_1052_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln269_fu_1146_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln269_fu_1152_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_69_fu_1167_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln70_fu_1181_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln70_fu_1175_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln70_fu_1187_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln70_fu_1163_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln70_fu_1193_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_71_fu_1210_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln70_1_fu_1224_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln70_1_fu_1218_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln70_1_fu_1230_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln70_1_fu_1206_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln70_1_fu_1236_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_72_fu_1253_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln70_2_fu_1267_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln70_2_fu_1261_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln70_2_fu_1273_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln70_2_fu_1249_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln70_2_fu_1279_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln887_fu_1375_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln215_fu_1389_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal ret_V_fu_1393_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln178_fu_1405_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_68_fu_1428_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_exit_tran_regpp0 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;
    signal ap_condition_367 : BOOLEAN;
    signal ap_condition_410 : BOOLEAN;
    signal ap_condition_405 : BOOLEAN;
    signal ap_condition_431 : BOOLEAN;
    signal ap_condition_426 : BOOLEAN;
    signal ap_condition_389 : BOOLEAN;
    signal ap_condition_384 : BOOLEAN;
    signal ap_condition_589 : BOOLEAN;
    signal ap_condition_472 : BOOLEAN;
    signal ap_condition_307 : BOOLEAN;

    component p_sc_stream_circularlinebuffer_shift_thread_shift_sr_elem_regs_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (127 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (127 downto 0) );
    end component;



begin
    sr_elem_regs_V_U : component p_sc_stream_circularlinebuffer_shift_thread_shift_sr_elem_regs_V
    generic map (
        DataWidth => 128,
        AddressRange => 192,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sr_elem_regs_V_address0,
        ce0 => sr_elem_regs_V_ce0,
        we0 => sr_elem_regs_V_we0,
        d0 => din_0_dout,
        q0 => sr_elem_regs_V_q0);

    sr_next_elem_regs_V_U : component p_sc_stream_circularlinebuffer_shift_thread_shift_sr_elem_regs_V
    generic map (
        DataWidth => 128,
        AddressRange => 192,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sr_next_elem_regs_V_address0,
        ce0 => sr_next_elem_regs_V_ce0,
        we0 => sr_next_elem_regs_V_we0,
        d0 => din_1_dout,
        q0 => sr_next_elem_regs_V_q0);

    sr_next_next_elem_re_U : component p_sc_stream_circularlinebuffer_shift_thread_shift_sr_elem_regs_V
    generic map (
        DataWidth => 128,
        AddressRange => 192,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sr_next_next_elem_re_address0,
        ce0 => sr_next_next_elem_re_ce0,
        we0 => sr_next_next_elem_re_we0,
        d0 => din_2_dout,
        q0 => sr_next_next_elem_re_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and ((or_ln230_fu_851_p2 = ap_const_lv1_0) or (ap_predicate_tran6to7_state5 = ap_const_boolean_1)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state10) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln234_fu_1018_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state10)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state10);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln234_fu_1018_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (grp_fu_647_p1 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif (((io_acc_block_signal_op75 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3) and (val_fc_fu_729_p1 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                elsif (((io_acc_block_signal_op75 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3) and (val_fc_fu_729_p1 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_exit_tran_regpp0_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                if ((or_ln230_fu_851_p2 = ap_const_lv1_0)) then 
                    ap_exit_tran_regpp0(0) <= '1';
                elsif ((ap_predicate_tran6to7_state5 = ap_const_boolean_1)) then 
                    ap_exit_tran_regpp0(0) <= '0';
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter1_output_tmp_V_load_0_reg_463_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_367)) then
                if (((icmp_ln249_fu_1040_p2 = ap_const_lv1_1) and (grp_fu_651_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp1_iter1_output_tmp_V_load_0_reg_463 <= ap_const_lv128_lc_1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter1_output_tmp_V_load_0_reg_463 <= ap_phi_reg_pp1_iter0_output_tmp_V_load_0_reg_463;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter1_phi_ln69_1_reg_445_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_367)) then
                if ((ap_const_boolean_1 = ap_condition_405)) then 
                    ap_phi_reg_pp1_iter1_phi_ln69_1_reg_445 <= add_ln69_1_fu_1104_p2;
                elsif ((ap_const_boolean_1 = ap_condition_410)) then 
                    ap_phi_reg_pp1_iter1_phi_ln69_1_reg_445 <= sub_ln69_5_fu_1110_p2;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter1_phi_ln69_1_reg_445 <= ap_phi_reg_pp1_iter0_phi_ln69_1_reg_445;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter1_phi_ln69_2_reg_454_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_367)) then
                if ((ap_const_boolean_1 = ap_condition_426)) then 
                    ap_phi_reg_pp1_iter1_phi_ln69_2_reg_454 <= add_ln69_2_fu_1134_p2;
                elsif ((ap_const_boolean_1 = ap_condition_431)) then 
                    ap_phi_reg_pp1_iter1_phi_ln69_2_reg_454 <= sub_ln69_7_fu_1140_p2;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter1_phi_ln69_2_reg_454 <= ap_phi_reg_pp1_iter0_phi_ln69_2_reg_454;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter1_phi_ln69_reg_436_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_367)) then
                if ((ap_const_boolean_1 = ap_condition_384)) then 
                    ap_phi_reg_pp1_iter1_phi_ln69_reg_436 <= add_ln69_fu_1074_p2;
                elsif ((ap_const_boolean_1 = ap_condition_389)) then 
                    ap_phi_reg_pp1_iter1_phi_ln69_reg_436 <= sub_ln69_1_fu_1080_p2;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter1_phi_ln69_reg_436 <= ap_phi_reg_pp1_iter0_phi_ln69_reg_436;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_output_tmp_V_load_1_reg_475_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_589)) then
                if (((icmp_ln249_reg_1665 = ap_const_lv1_1) and (icmp_ln258_1_reg_1708 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp1_iter2_output_tmp_V_load_1_reg_475 <= ap_const_lv128_lc_1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_output_tmp_V_load_1_reg_475 <= ap_phi_reg_pp1_iter1_output_tmp_V_load_1_reg_475;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_storemerge_2_reg_487_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_589)) then
                if (((icmp_ln249_reg_1665 = ap_const_lv1_1) and (icmp_ln258_2_reg_1742 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp1_iter2_storemerge_2_reg_487 <= ap_const_lv128_lc_1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_storemerge_2_reg_487 <= ap_phi_reg_pp1_iter1_storemerge_2_reg_487;
                end if;
            end if; 
        end if;
    end process;

    i4_0_in_reg_427_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln234_fu_1018_p2 = ap_const_lv1_1))) then 
                i4_0_in_reg_427 <= select_ln243_fu_1034_p3;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln249_reg_1665 = ap_const_lv1_1))) then 
                i4_0_in_reg_427 <= start_pos_reg_1669;
            end if; 
        end if;
    end process;

    i_re_0_reg_416_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                i_re_0_reg_416 <= i_re_reg_1650;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and (val_EOP_2_reg_1633 = ap_const_lv1_0))) then 
                i_re_0_reg_416 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;

    output_fc_V_0_1_reg_517_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (val_EOP_reg_1801 = ap_const_lv1_0))) then 
                output_fc_V_0_1_reg_517 <= output_fc_V_0_3_reg_608;
            elsif (((io_acc_block_signal_op75 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3) and (val_fc_fu_729_p1 = ap_const_lv1_1))) then 
                output_fc_V_0_1_reg_517 <= val_window_elem_V_fu_176;
            end if; 
        end if;
    end process;

    output_fc_V_0_3_reg_608_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (or_ln178_fu_1405_p2 = ap_const_lv1_0) and (grp_fu_647_p1 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (or_ln178_fu_1405_p2 = ap_const_lv1_1) and (grp_fu_647_p1 = ap_const_lv1_0)))) then 
                output_fc_V_0_3_reg_608 <= ap_phi_mux_output_fc_V_0_2_phi_fu_566_p6;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (grp_fu_647_p1 = ap_const_lv1_1))) then 
                output_fc_V_0_3_reg_608 <= ap_phi_mux_output_fc_V_0_1_phi_fu_520_p4;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                output_fc_V_0_3_reg_608 <= ap_phi_reg_pp2_iter0_output_fc_V_0_3_reg_608;
            end if; 
        end if;
    end process;

    output_fc_V_1_1_reg_508_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (val_EOP_reg_1801 = ap_const_lv1_0))) then 
                output_fc_V_1_1_reg_508 <= output_fc_V_1_3_reg_592;
            elsif (((io_acc_block_signal_op75 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3) and (val_fc_fu_729_p1 = ap_const_lv1_1))) then 
                output_fc_V_1_1_reg_508 <= val_window_elem_V_1_fu_180;
            end if; 
        end if;
    end process;

    output_fc_V_1_3_reg_592_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (or_ln178_fu_1405_p2 = ap_const_lv1_0) and (grp_fu_647_p1 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (or_ln178_fu_1405_p2 = ap_const_lv1_1) and (grp_fu_647_p1 = ap_const_lv1_0)))) then 
                output_fc_V_1_3_reg_592 <= ap_phi_mux_output_fc_V_1_2_phi_fu_553_p6;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (grp_fu_647_p1 = ap_const_lv1_1))) then 
                output_fc_V_1_3_reg_592 <= ap_phi_mux_output_fc_V_1_1_phi_fu_511_p4;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                output_fc_V_1_3_reg_592 <= ap_phi_reg_pp2_iter0_output_fc_V_1_3_reg_592;
            end if; 
        end if;
    end process;

    output_fc_V_2_1_reg_499_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (val_EOP_reg_1801 = ap_const_lv1_0))) then 
                output_fc_V_2_1_reg_499 <= output_fc_V_2_3_reg_576;
            elsif (((io_acc_block_signal_op75 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3) and (val_fc_fu_729_p1 = ap_const_lv1_1))) then 
                output_fc_V_2_1_reg_499 <= val_window_elem_V_2_fu_184;
            end if; 
        end if;
    end process;

    output_fc_V_2_3_reg_576_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (or_ln178_fu_1405_p2 = ap_const_lv1_0) and (grp_fu_647_p1 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (or_ln178_fu_1405_p2 = ap_const_lv1_1) and (grp_fu_647_p1 = ap_const_lv1_0)))) then 
                output_fc_V_2_3_reg_576 <= ap_phi_mux_output_fc_V_2_2_phi_fu_540_p6;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (grp_fu_647_p1 = ap_const_lv1_1))) then 
                output_fc_V_2_3_reg_576 <= ap_phi_mux_output_fc_V_2_1_phi_fu_502_p4;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                output_fc_V_2_3_reg_576 <= ap_phi_reg_pp2_iter0_output_fc_V_2_3_reg_576;
            end if; 
        end if;
    end process;

    p_0190_2_reg_624_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_472)) then
                if (((or_ln178_fu_1405_p2 = ap_const_lv1_0) and (grp_fu_647_p1 = ap_const_lv1_0))) then 
                    p_0190_2_reg_624 <= fc_ptr_V_fu_1411_p2;
                elsif (((or_ln178_fu_1405_p2 = ap_const_lv1_1) and (grp_fu_647_p1 = ap_const_lv1_0))) then 
                    p_0190_2_reg_624 <= ap_const_lv2_0;
                elsif ((grp_fu_647_p1 = ap_const_lv1_1)) then 
                    p_0190_2_reg_624 <= ap_phi_mux_t_V_3_phi_fu_530_p4;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    p_0190_2_reg_624 <= ap_phi_reg_pp2_iter0_p_0190_2_reg_624;
                end if;
            end if; 
        end if;
    end process;

    sr_elem_ptr_write_1_reg_337_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln234_fu_1018_p2 = ap_const_lv1_0))) then 
                sr_elem_ptr_write_1_reg_337 <= sr_elem_ptr_write_3_reg_403;
            elsif (((io_acc_block_signal_op75 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3) and (val_fc_fu_729_p1 = ap_const_lv1_0))) then 
                sr_elem_ptr_write_1_reg_337 <= sr_elem_ptr_write_4_fu_164;
            end if; 
        end if;
    end process;

    sr_elem_ptr_write_2_reg_367_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_ln230_reg_1637 = ap_const_lv1_1) and (val_EOP_2_reg_1633 = ap_const_lv1_0))) then 
                sr_elem_ptr_write_2_reg_367 <= sr_elem_ptr_write_3_reg_403;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                sr_elem_ptr_write_2_reg_367 <= sr_elem_ptr_write_1_reg_337;
            end if; 
        end if;
    end process;

    sr_elem_ptr_write_3_reg_403_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_307)) then
                if ((grp_fu_647_p1 = ap_const_lv1_0)) then 
                    sr_elem_ptr_write_3_reg_403 <= sr_elem_ptr_write_fu_790_p3;
                elsif ((grp_fu_647_p1 = ap_const_lv1_1)) then 
                    sr_elem_ptr_write_3_reg_403 <= ap_phi_mux_sr_elem_ptr_write_2_phi_fu_370_p4;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    sr_elem_ptr_write_3_reg_403 <= ap_phi_reg_pp0_iter0_sr_elem_ptr_write_3_reg_403;
                end if;
            end if; 
        end if;
    end process;

    sr_elem_ptr_write_4_fu_164_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((io_acc_block_signal_op255 = ap_const_logic_0) and (val_fc_reg_1590 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state14) and (val_fc_reg_1590 = ap_const_lv1_0))) then 
                sr_elem_ptr_write_4_fu_164 <= sr_elem_ptr_write_3_reg_403;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                sr_elem_ptr_write_4_fu_164 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    sr_next_elem_ptr_wri_1_reg_327_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln234_fu_1018_p2 = ap_const_lv1_0))) then 
                sr_next_elem_ptr_wri_1_reg_327 <= sr_next_elem_ptr_wri_4_reg_390;
            elsif (((io_acc_block_signal_op75 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3) and (val_fc_fu_729_p1 = ap_const_lv1_0))) then 
                sr_next_elem_ptr_wri_1_reg_327 <= sr_next_elem_ptr_wri_fu_168;
            end if; 
        end if;
    end process;

    sr_next_elem_ptr_wri_2_reg_357_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_ln230_reg_1637 = ap_const_lv1_1) and (val_EOP_2_reg_1633 = ap_const_lv1_0))) then 
                sr_next_elem_ptr_wri_2_reg_357 <= sr_next_elem_ptr_wri_4_reg_390;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                sr_next_elem_ptr_wri_2_reg_357 <= sr_next_elem_ptr_wri_1_reg_327;
            end if; 
        end if;
    end process;

    sr_next_elem_ptr_wri_4_reg_390_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_307)) then
                if ((grp_fu_647_p1 = ap_const_lv1_0)) then 
                    sr_next_elem_ptr_wri_4_reg_390 <= sr_next_elem_ptr_wri_5_fu_816_p3;
                elsif ((grp_fu_647_p1 = ap_const_lv1_1)) then 
                    sr_next_elem_ptr_wri_4_reg_390 <= ap_phi_mux_sr_next_elem_ptr_wri_2_phi_fu_360_p4;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    sr_next_elem_ptr_wri_4_reg_390 <= ap_phi_reg_pp0_iter0_sr_next_elem_ptr_wri_4_reg_390;
                end if;
            end if; 
        end if;
    end process;

    sr_next_elem_ptr_wri_fu_168_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((io_acc_block_signal_op255 = ap_const_logic_0) and (val_fc_reg_1590 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state14) and (val_fc_reg_1590 = ap_const_lv1_0))) then 
                sr_next_elem_ptr_wri_fu_168 <= sr_next_elem_ptr_wri_4_reg_390;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                sr_next_elem_ptr_wri_fu_168 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    sr_next_next_elem_pt_1_reg_317_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln234_fu_1018_p2 = ap_const_lv1_0))) then 
                sr_next_next_elem_pt_1_reg_317 <= sr_next_next_elem_pt_4_reg_377;
            elsif (((io_acc_block_signal_op75 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3) and (val_fc_fu_729_p1 = ap_const_lv1_0))) then 
                sr_next_next_elem_pt_1_reg_317 <= sr_next_next_elem_pt_fu_172;
            end if; 
        end if;
    end process;

    sr_next_next_elem_pt_2_reg_347_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_ln230_reg_1637 = ap_const_lv1_1) and (val_EOP_2_reg_1633 = ap_const_lv1_0))) then 
                sr_next_next_elem_pt_2_reg_347 <= sr_next_next_elem_pt_4_reg_377;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                sr_next_next_elem_pt_2_reg_347 <= sr_next_next_elem_pt_1_reg_317;
            end if; 
        end if;
    end process;

    sr_next_next_elem_pt_4_reg_377_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_307)) then
                if ((grp_fu_647_p1 = ap_const_lv1_0)) then 
                    sr_next_next_elem_pt_4_reg_377 <= sr_next_next_elem_pt_5_fu_842_p3;
                elsif ((grp_fu_647_p1 = ap_const_lv1_1)) then 
                    sr_next_next_elem_pt_4_reg_377 <= ap_phi_mux_sr_next_next_elem_pt_2_phi_fu_350_p4;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    sr_next_next_elem_pt_4_reg_377 <= ap_phi_reg_pp0_iter0_sr_next_next_elem_pt_4_reg_377;
                end if;
            end if; 
        end if;
    end process;

    sr_next_next_elem_pt_fu_172_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((io_acc_block_signal_op255 = ap_const_logic_0) and (val_fc_reg_1590 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state14) and (val_fc_reg_1590 = ap_const_lv1_0))) then 
                sr_next_next_elem_pt_fu_172 <= sr_next_next_elem_pt_4_reg_377;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                sr_next_next_elem_pt_fu_172 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    t_V_3_reg_526_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (val_EOP_reg_1801 = ap_const_lv1_0))) then 
                t_V_3_reg_526 <= p_0190_2_reg_624;
            elsif (((io_acc_block_signal_op75 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3) and (val_fc_fu_729_p1 = ap_const_lv1_1))) then 
                t_V_3_reg_526 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (val_EOP_2_reg_1633 = ap_const_lv1_0))) then
                N_re_reg_1641 <= N_re_fu_1009_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ap_phi_reg_pp1_iter1_output_tmp_V_load_1_reg_475 <= ap_phi_reg_pp1_iter0_output_tmp_V_load_1_reg_475;
                ap_phi_reg_pp1_iter1_storemerge_2_reg_487 <= ap_phi_reg_pp1_iter0_storemerge_2_reg_487;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ap_phi_reg_pp1_iter2_output_tmp_V_load_0_reg_463 <= ap_phi_reg_pp1_iter1_output_tmp_V_load_0_reg_463;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                i_re_reg_1650 <= i_re_fu_1023_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (grp_fu_647_p1 = ap_const_lv1_0))) then
                icmp_ln178_reg_1809 <= icmp_ln178_fu_1399_p2;
                or_ln178_reg_1829 <= or_ln178_fu_1405_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (or_ln178_fu_1405_p2 = ap_const_lv1_1) and (grp_fu_647_p1 = ap_const_lv1_0))) then
                icmp_ln204_reg_1838 <= icmp_ln204_fu_1438_p2;
                tmp_data_V_1_reg_1833 <= tmp_data_V_1_fu_1418_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                icmp_ln249_reg_1665 <= icmp_ln249_fu_1040_p2;
                icmp_ln249_reg_1665_pp1_iter1_reg <= icmp_ln249_reg_1665;
                icmp_ln258_1_reg_1708_pp1_iter1_reg <= icmp_ln258_1_reg_1708;
                icmp_ln258_2_reg_1742_pp1_iter1_reg <= icmp_ln258_2_reg_1742;
                icmp_ln258_reg_1674_pp1_iter1_reg <= icmp_ln258_reg_1674;
                raw_out_tlast_V_1_reg_1776_pp1_iter1_reg <= raw_out_tlast_V_1_reg_1776;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln249_fu_1040_p2 = ap_const_lv1_1))) then
                icmp_ln258_1_reg_1708 <= grp_fu_665_p2;
                icmp_ln258_2_reg_1742 <= grp_fu_671_p2;
                icmp_ln258_reg_1674 <= grp_fu_651_p2;
                start_pos_reg_1669 <= start_pos_fu_1046_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                or_ln230_reg_1637 <= or_ln230_fu_851_p2;
                val_col_skip_reg_1624 <= (0=>din_4_dout, others=>'-');
                val_skip_reg_1619 <= (0=>din_3_dout, others=>'-');
                val_window_next_elem_reg_1609 <= din_1_dout;
                val_window_next_next_reg_1614 <= din_2_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln234_fu_1018_p2 = ap_const_lv1_1))) then
                pre_stream_reg_1655 <= pre_stream_fu_1029_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((io_acc_block_signal_op75 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3) and (val_fc_fu_729_p1 = ap_const_lv1_0))) then
                pure_stream_reg_1599 <= pure_stream_fu_745_p2;
                stide_equal_window_reg_1594 <= stide_equal_window_fu_733_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln249_fu_1040_p2 = ap_const_lv1_1))) then
                raw_out_tlast_V_1_reg_1776 <= raw_out_tlast_V_1_fu_1157_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                val_EOP_2_reg_1633 <= (0=>din_7_dout, others=>'-');
                val_eol_reg_1628 <= (0=>din_5_dout, others=>'-');
                val_window_elem_V_7_reg_1604 <= din_0_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                val_EOP_reg_1801 <= (0=>din_7_dout, others=>'-');
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((io_acc_block_signal_op75 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                val_fc_reg_1590 <= (0=>ctrl_7_dout, others=>'-');
                val_replay_reg_1584 <= ctrl_5_dout;
                val_stride_step_pkg_reg_1572 <= ctrl_1_dout;
                val_window_size_pkg_reg_1567 <= ctrl_0_dout;
                val_window_size_reg_1577 <= ctrl_2_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                val_tlast_reg_1796 <= (0=>din_6_dout, others=>'-');
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                val_window_elem_V_1_fu_180 <= output_fc_V_1_3_reg_592;
                val_window_elem_V_2_fu_184 <= output_fc_V_2_3_reg_576;
                val_window_elem_V_fu_176 <= output_fc_V_0_3_reg_608;
            end if;
        end if;
    end process;
    ap_exit_tran_regpp0(1) <= '0';

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp2_iter1, ap_CS_fsm_state18, ap_enable_reg_pp0_iter1, val_EOP_2_reg_1633, ap_enable_reg_pp1_iter2, ap_CS_fsm_state14, val_fc_reg_1590, ap_CS_fsm_state3, io_acc_block_signal_op75, val_fc_fu_729_p1, ap_CS_fsm_state8, icmp_ln234_fu_1018_p2, ap_CS_fsm_state9, icmp_ln249_fu_1040_p2, ap_enable_reg_pp1_iter0, ap_block_pp0_stage0_subdone, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter1, ap_block_pp2_stage0_subdone, io_acc_block_signal_op255, io_acc_block_signal_op303, ap_exit_tran_regpp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((io_acc_block_signal_op75 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3) and (val_fc_fu_729_p1 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif (((io_acc_block_signal_op75 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3) and (val_fc_fu_729_p1 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_exit_tran_regpp0 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                elsif (((ap_exit_tran_regpp0 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (val_EOP_2_reg_1633 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln234_fu_1018_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln249_fu_1040_p2 = ap_const_lv1_0))) and not(((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln249_fu_1040_p2 = ap_const_lv1_0)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state14 => 
                if ((not(((io_acc_block_signal_op255 = ap_const_logic_0) and (val_fc_reg_1590 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_pp2_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                if (((io_acc_block_signal_op303 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXX";
        end case;
    end process;
    N_re_fu_1009_p2 <= std_logic_vector(unsigned(val_replay_reg_1584) + unsigned(zext_ln233_fu_1005_p1));
    add_ln64_1_fu_804_p2 <= std_logic_vector(signed(ap_phi_mux_sr_next_elem_ptr_wri_2_phi_fu_360_p4) + signed(ap_const_lv32_1));
    add_ln64_2_fu_830_p2 <= std_logic_vector(signed(ap_phi_mux_sr_next_next_elem_pt_2_phi_fu_350_p4) + signed(ap_const_lv32_1));
    add_ln64_fu_778_p2 <= std_logic_vector(signed(ap_phi_mux_sr_elem_ptr_write_2_phi_fu_370_p4) + signed(ap_const_lv32_1));
    add_ln69_1_fu_1104_p2 <= std_logic_vector(unsigned(sub_ln69_6_fu_1098_p2) + unsigned(sr_next_elem_ptr_wri_4_reg_390));
    add_ln69_2_fu_1134_p2 <= std_logic_vector(unsigned(sub_ln69_8_fu_1128_p2) + unsigned(sr_next_next_elem_pt_4_reg_377));
    add_ln69_fu_1074_p2 <= std_logic_vector(unsigned(sub_ln69_3_fu_1068_p2) + unsigned(sr_elem_ptr_write_3_reg_403));
    and_ln70_1_fu_1230_p2 <= (xor_ln70_1_fu_1218_p2 and icmp_ln70_1_fu_1224_p2);
    and_ln70_2_fu_1273_p2 <= (xor_ln70_2_fu_1261_p2 and icmp_ln70_2_fu_1267_p2);
    and_ln70_fu_1187_p2 <= (xor_ln70_fu_1175_p2 and icmp_ln70_fu_1181_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(4);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(8);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(9);
    ap_CS_fsm_state14 <= ap_CS_fsm(10);
    ap_CS_fsm_state17 <= ap_CS_fsm(12);
    ap_CS_fsm_state18 <= ap_CS_fsm(13);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state8 <= ap_CS_fsm(6);
    ap_CS_fsm_state9 <= ap_CS_fsm(7);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, io_acc_block_signal_op101, io_acc_block_signal_op147, ap_predicate_op147_write_state6)
    begin
                ap_block_pp0_stage0_01001 <= (((io_acc_block_signal_op147 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op147_write_state6 = ap_const_boolean_1)) or ((io_acc_block_signal_op101 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, io_acc_block_signal_op101, io_acc_block_signal_op147, ap_predicate_op147_write_state6)
    begin
                ap_block_pp0_stage0_11001 <= (((io_acc_block_signal_op147 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op147_write_state6 = ap_const_boolean_1)) or ((io_acc_block_signal_op101 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, io_acc_block_signal_op101, io_acc_block_signal_op147, ap_predicate_op147_write_state6)
    begin
                ap_block_pp0_stage0_subdone <= (((io_acc_block_signal_op147 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op147_write_state6 = ap_const_boolean_1)) or ((io_acc_block_signal_op101 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_01001_assign_proc : process(ap_enable_reg_pp1_iter2, icmp_ln249_reg_1665_pp1_iter1_reg, io_acc_block_signal_op250)
    begin
                ap_block_pp1_stage0_01001 <= ((io_acc_block_signal_op250 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (icmp_ln249_reg_1665_pp1_iter1_reg = ap_const_lv1_1));
    end process;


    ap_block_pp1_stage0_11001_assign_proc : process(ap_enable_reg_pp1_iter2, icmp_ln249_reg_1665_pp1_iter1_reg, io_acc_block_signal_op250)
    begin
                ap_block_pp1_stage0_11001 <= ((io_acc_block_signal_op250 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (icmp_ln249_reg_1665_pp1_iter1_reg = ap_const_lv1_1));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(ap_enable_reg_pp1_iter2, icmp_ln249_reg_1665_pp1_iter1_reg, io_acc_block_signal_op250)
    begin
                ap_block_pp1_stage0_subdone <= ((io_acc_block_signal_op250 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (icmp_ln249_reg_1665_pp1_iter1_reg = ap_const_lv1_1));
    end process;

        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp2_stage0_01001_assign_proc : process(ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1, io_acc_block_signal_op268, io_acc_block_signal_op299, ap_predicate_op299_write_state16)
    begin
                ap_block_pp2_stage0_01001 <= (((io_acc_block_signal_op299 = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_predicate_op299_write_state16 = ap_const_boolean_1)) or ((io_acc_block_signal_op268 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp2_stage0_11001_assign_proc : process(ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1, io_acc_block_signal_op268, io_acc_block_signal_op299, ap_predicate_op299_write_state16)
    begin
                ap_block_pp2_stage0_11001 <= (((io_acc_block_signal_op299 = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_predicate_op299_write_state16 = ap_const_boolean_1)) or ((io_acc_block_signal_op268 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp2_stage0_subdone_assign_proc : process(ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1, io_acc_block_signal_op268, io_acc_block_signal_op299, ap_predicate_op299_write_state16)
    begin
                ap_block_pp2_stage0_subdone <= (((io_acc_block_signal_op299 = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_predicate_op299_write_state16 = ap_const_boolean_1)) or ((io_acc_block_signal_op268 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)));
    end process;

        ap_block_state10_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state12_pp1_stage0_iter2_assign_proc : process(icmp_ln249_reg_1665_pp1_iter1_reg, io_acc_block_signal_op250)
    begin
                ap_block_state12_pp1_stage0_iter2 <= ((io_acc_block_signal_op250 = ap_const_logic_0) and (icmp_ln249_reg_1665_pp1_iter1_reg = ap_const_lv1_1));
    end process;


    ap_block_state14_assign_proc : process(val_fc_reg_1590, io_acc_block_signal_op255)
    begin
                ap_block_state14 <= ((io_acc_block_signal_op255 = ap_const_logic_0) and (val_fc_reg_1590 = ap_const_lv1_0));
    end process;


    ap_block_state15_pp2_stage0_iter0_assign_proc : process(io_acc_block_signal_op268)
    begin
                ap_block_state15_pp2_stage0_iter0 <= (io_acc_block_signal_op268 = ap_const_logic_0);
    end process;


    ap_block_state16_pp2_stage0_iter1_assign_proc : process(io_acc_block_signal_op299, ap_predicate_op299_write_state16)
    begin
                ap_block_state16_pp2_stage0_iter1 <= ((io_acc_block_signal_op299 = ap_const_logic_0) and (ap_predicate_op299_write_state16 = ap_const_boolean_1));
    end process;


    ap_block_state5_pp0_stage0_iter0_assign_proc : process(io_acc_block_signal_op101)
    begin
                ap_block_state5_pp0_stage0_iter0 <= (io_acc_block_signal_op101 = ap_const_logic_0);
    end process;


    ap_block_state6_pp0_stage0_iter1_assign_proc : process(io_acc_block_signal_op147, ap_predicate_op147_write_state6)
    begin
                ap_block_state6_pp0_stage0_iter1 <= ((io_acc_block_signal_op147 = ap_const_logic_0) and (ap_predicate_op147_write_state6 = ap_const_boolean_1));
    end process;


    ap_condition_307_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_307 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_367_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0)
    begin
                ap_condition_367 <= ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0));
    end process;


    ap_condition_384_assign_proc : process(icmp_ln249_fu_1040_p2, grp_fu_651_p2, icmp_ln69_fu_1062_p2)
    begin
                ap_condition_384 <= ((grp_fu_651_p2 = ap_const_lv1_1) and (icmp_ln249_fu_1040_p2 = ap_const_lv1_1) and (icmp_ln69_fu_1062_p2 = ap_const_lv1_0));
    end process;


    ap_condition_389_assign_proc : process(icmp_ln249_fu_1040_p2, grp_fu_651_p2, icmp_ln69_fu_1062_p2)
    begin
                ap_condition_389 <= ((icmp_ln69_fu_1062_p2 = ap_const_lv1_1) and (grp_fu_651_p2 = ap_const_lv1_1) and (icmp_ln249_fu_1040_p2 = ap_const_lv1_1));
    end process;


    ap_condition_405_assign_proc : process(icmp_ln249_fu_1040_p2, grp_fu_665_p2, icmp_ln69_1_fu_1092_p2)
    begin
                ap_condition_405 <= ((grp_fu_665_p2 = ap_const_lv1_1) and (icmp_ln249_fu_1040_p2 = ap_const_lv1_1) and (icmp_ln69_1_fu_1092_p2 = ap_const_lv1_0));
    end process;


    ap_condition_410_assign_proc : process(icmp_ln249_fu_1040_p2, grp_fu_665_p2, icmp_ln69_1_fu_1092_p2)
    begin
                ap_condition_410 <= ((icmp_ln69_1_fu_1092_p2 = ap_const_lv1_1) and (grp_fu_665_p2 = ap_const_lv1_1) and (icmp_ln249_fu_1040_p2 = ap_const_lv1_1));
    end process;


    ap_condition_426_assign_proc : process(icmp_ln249_fu_1040_p2, grp_fu_671_p2, icmp_ln69_2_fu_1122_p2)
    begin
                ap_condition_426 <= ((grp_fu_671_p2 = ap_const_lv1_1) and (icmp_ln249_fu_1040_p2 = ap_const_lv1_1) and (icmp_ln69_2_fu_1122_p2 = ap_const_lv1_0));
    end process;


    ap_condition_431_assign_proc : process(icmp_ln249_fu_1040_p2, grp_fu_671_p2, icmp_ln69_2_fu_1122_p2)
    begin
                ap_condition_431 <= ((icmp_ln69_2_fu_1122_p2 = ap_const_lv1_1) and (grp_fu_671_p2 = ap_const_lv1_1) and (icmp_ln249_fu_1040_p2 = ap_const_lv1_1));
    end process;


    ap_condition_472_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_block_pp2_stage0_11001)
    begin
                ap_condition_472 <= ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0));
    end process;


    ap_condition_589_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter1)
    begin
                ap_condition_589 <= ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0));
    end process;


    ap_condition_pp1_exit_iter0_state10_assign_proc : process(icmp_ln249_fu_1040_p2)
    begin
        if ((icmp_ln249_fu_1040_p2 = ap_const_lv1_0)) then 
            ap_condition_pp1_exit_iter0_state10 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state10 <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);

    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i4_0_in_phi_fu_430_p4_assign_proc : process(ap_block_pp1_stage0, icmp_ln249_reg_1665, i4_0_in_reg_427, ap_CS_fsm_pp1_stage0, start_pos_reg_1669, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln249_reg_1665 = ap_const_lv1_1))) then 
            ap_phi_mux_i4_0_in_phi_fu_430_p4 <= start_pos_reg_1669;
        else 
            ap_phi_mux_i4_0_in_phi_fu_430_p4 <= i4_0_in_reg_427;
        end if; 
    end process;


    ap_phi_mux_output_fc_V_0_1_phi_fu_520_p4_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0, ap_enable_reg_pp2_iter1, val_EOP_reg_1801, output_fc_V_0_1_reg_517, output_fc_V_0_3_reg_608)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (val_EOP_reg_1801 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            ap_phi_mux_output_fc_V_0_1_phi_fu_520_p4 <= output_fc_V_0_3_reg_608;
        else 
            ap_phi_mux_output_fc_V_0_1_phi_fu_520_p4 <= output_fc_V_0_1_reg_517;
        end if; 
    end process;


    ap_phi_mux_output_fc_V_0_2_phi_fu_566_p6_assign_proc : process(din_0_dout, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_block_pp2_stage0, grp_fu_647_p1, t_V_fu_1381_p3, ap_phi_mux_output_fc_V_0_1_phi_fu_520_p4, ap_phi_reg_pp2_iter0_output_fc_V_0_2_reg_563)
    begin
        if (((t_V_fu_1381_p3 = ap_const_lv2_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (grp_fu_647_p1 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            ap_phi_mux_output_fc_V_0_2_phi_fu_566_p6 <= din_0_dout;
        elsif ((((t_V_fu_1381_p3 = ap_const_lv2_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (grp_fu_647_p1 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0)) or (not((t_V_fu_1381_p3 = ap_const_lv2_1)) and not((t_V_fu_1381_p3 = ap_const_lv2_0)) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (grp_fu_647_p1 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0)))) then 
            ap_phi_mux_output_fc_V_0_2_phi_fu_566_p6 <= ap_phi_mux_output_fc_V_0_1_phi_fu_520_p4;
        else 
            ap_phi_mux_output_fc_V_0_2_phi_fu_566_p6 <= ap_phi_reg_pp2_iter0_output_fc_V_0_2_reg_563;
        end if; 
    end process;


    ap_phi_mux_output_fc_V_1_1_phi_fu_511_p4_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0, ap_enable_reg_pp2_iter1, val_EOP_reg_1801, output_fc_V_1_1_reg_508, output_fc_V_1_3_reg_592)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (val_EOP_reg_1801 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            ap_phi_mux_output_fc_V_1_1_phi_fu_511_p4 <= output_fc_V_1_3_reg_592;
        else 
            ap_phi_mux_output_fc_V_1_1_phi_fu_511_p4 <= output_fc_V_1_1_reg_508;
        end if; 
    end process;


    ap_phi_mux_output_fc_V_1_2_phi_fu_553_p6_assign_proc : process(din_0_dout, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_block_pp2_stage0, grp_fu_647_p1, t_V_fu_1381_p3, ap_phi_mux_output_fc_V_1_1_phi_fu_511_p4, ap_phi_reg_pp2_iter0_output_fc_V_1_2_reg_550)
    begin
        if (((t_V_fu_1381_p3 = ap_const_lv2_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (grp_fu_647_p1 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            ap_phi_mux_output_fc_V_1_2_phi_fu_553_p6 <= din_0_dout;
        elsif (((not((t_V_fu_1381_p3 = ap_const_lv2_1)) and not((t_V_fu_1381_p3 = ap_const_lv2_0)) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (grp_fu_647_p1 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0)) or ((t_V_fu_1381_p3 = ap_const_lv2_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (grp_fu_647_p1 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0)))) then 
            ap_phi_mux_output_fc_V_1_2_phi_fu_553_p6 <= ap_phi_mux_output_fc_V_1_1_phi_fu_511_p4;
        else 
            ap_phi_mux_output_fc_V_1_2_phi_fu_553_p6 <= ap_phi_reg_pp2_iter0_output_fc_V_1_2_reg_550;
        end if; 
    end process;


    ap_phi_mux_output_fc_V_2_1_phi_fu_502_p4_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0, ap_enable_reg_pp2_iter1, val_EOP_reg_1801, output_fc_V_2_1_reg_499, output_fc_V_2_3_reg_576)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (val_EOP_reg_1801 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            ap_phi_mux_output_fc_V_2_1_phi_fu_502_p4 <= output_fc_V_2_3_reg_576;
        else 
            ap_phi_mux_output_fc_V_2_1_phi_fu_502_p4 <= output_fc_V_2_1_reg_499;
        end if; 
    end process;


    ap_phi_mux_output_fc_V_2_2_phi_fu_540_p6_assign_proc : process(din_0_dout, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_block_pp2_stage0, grp_fu_647_p1, t_V_fu_1381_p3, ap_phi_mux_output_fc_V_2_1_phi_fu_502_p4, ap_phi_reg_pp2_iter0_output_fc_V_2_2_reg_537)
    begin
        if ((((t_V_fu_1381_p3 = ap_const_lv2_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (grp_fu_647_p1 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0)) or ((t_V_fu_1381_p3 = ap_const_lv2_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (grp_fu_647_p1 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0)))) then 
            ap_phi_mux_output_fc_V_2_2_phi_fu_540_p6 <= ap_phi_mux_output_fc_V_2_1_phi_fu_502_p4;
        elsif ((not((t_V_fu_1381_p3 = ap_const_lv2_1)) and not((t_V_fu_1381_p3 = ap_const_lv2_0)) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (grp_fu_647_p1 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            ap_phi_mux_output_fc_V_2_2_phi_fu_540_p6 <= din_0_dout;
        else 
            ap_phi_mux_output_fc_V_2_2_phi_fu_540_p6 <= ap_phi_reg_pp2_iter0_output_fc_V_2_2_reg_537;
        end if; 
    end process;


    ap_phi_mux_output_tmp_V_load_0_phi_fu_467_p4_assign_proc : process(ap_enable_reg_pp1_iter2, ap_block_pp1_stage0, icmp_ln249_reg_1665_pp1_iter1_reg, icmp_ln258_reg_1674_pp1_iter1_reg, sr_elem_regs_V_q0, ap_phi_reg_pp1_iter2_output_tmp_V_load_0_reg_463)
    begin
        if (((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln258_reg_1674_pp1_iter1_reg = ap_const_lv1_1) and (icmp_ln249_reg_1665_pp1_iter1_reg = ap_const_lv1_1))) then 
            ap_phi_mux_output_tmp_V_load_0_phi_fu_467_p4 <= sr_elem_regs_V_q0;
        else 
            ap_phi_mux_output_tmp_V_load_0_phi_fu_467_p4 <= ap_phi_reg_pp1_iter2_output_tmp_V_load_0_reg_463;
        end if; 
    end process;


    ap_phi_mux_output_tmp_V_load_1_phi_fu_479_p4_assign_proc : process(ap_enable_reg_pp1_iter2, ap_block_pp1_stage0, icmp_ln249_reg_1665_pp1_iter1_reg, icmp_ln258_1_reg_1708_pp1_iter1_reg, sr_next_elem_regs_V_q0, ap_phi_reg_pp1_iter2_output_tmp_V_load_1_reg_475)
    begin
        if (((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln258_1_reg_1708_pp1_iter1_reg = ap_const_lv1_1) and (icmp_ln249_reg_1665_pp1_iter1_reg = ap_const_lv1_1))) then 
            ap_phi_mux_output_tmp_V_load_1_phi_fu_479_p4 <= sr_next_elem_regs_V_q0;
        else 
            ap_phi_mux_output_tmp_V_load_1_phi_fu_479_p4 <= ap_phi_reg_pp1_iter2_output_tmp_V_load_1_reg_475;
        end if; 
    end process;


    ap_phi_mux_sr_elem_ptr_write_2_phi_fu_370_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, val_EOP_2_reg_1633, sr_elem_ptr_write_2_reg_367, sr_elem_ptr_write_3_reg_403, or_ln230_reg_1637)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_ln230_reg_1637 = ap_const_lv1_1) and (val_EOP_2_reg_1633 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_sr_elem_ptr_write_2_phi_fu_370_p4 <= sr_elem_ptr_write_3_reg_403;
        else 
            ap_phi_mux_sr_elem_ptr_write_2_phi_fu_370_p4 <= sr_elem_ptr_write_2_reg_367;
        end if; 
    end process;


    ap_phi_mux_sr_next_elem_ptr_wri_2_phi_fu_360_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, val_EOP_2_reg_1633, sr_next_elem_ptr_wri_2_reg_357, sr_next_elem_ptr_wri_4_reg_390, or_ln230_reg_1637)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_ln230_reg_1637 = ap_const_lv1_1) and (val_EOP_2_reg_1633 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_sr_next_elem_ptr_wri_2_phi_fu_360_p4 <= sr_next_elem_ptr_wri_4_reg_390;
        else 
            ap_phi_mux_sr_next_elem_ptr_wri_2_phi_fu_360_p4 <= sr_next_elem_ptr_wri_2_reg_357;
        end if; 
    end process;


    ap_phi_mux_sr_next_next_elem_pt_2_phi_fu_350_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, val_EOP_2_reg_1633, sr_next_next_elem_pt_2_reg_347, sr_next_next_elem_pt_4_reg_377, or_ln230_reg_1637)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_ln230_reg_1637 = ap_const_lv1_1) and (val_EOP_2_reg_1633 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_sr_next_next_elem_pt_2_phi_fu_350_p4 <= sr_next_next_elem_pt_4_reg_377;
        else 
            ap_phi_mux_sr_next_next_elem_pt_2_phi_fu_350_p4 <= sr_next_next_elem_pt_2_reg_347;
        end if; 
    end process;


    ap_phi_mux_storemerge_2_phi_fu_491_p4_assign_proc : process(ap_enable_reg_pp1_iter2, ap_block_pp1_stage0, icmp_ln249_reg_1665_pp1_iter1_reg, icmp_ln258_2_reg_1742_pp1_iter1_reg, sr_next_next_elem_re_q0, ap_phi_reg_pp1_iter2_storemerge_2_reg_487)
    begin
        if (((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln258_2_reg_1742_pp1_iter1_reg = ap_const_lv1_1) and (icmp_ln249_reg_1665_pp1_iter1_reg = ap_const_lv1_1))) then 
            ap_phi_mux_storemerge_2_phi_fu_491_p4 <= sr_next_next_elem_re_q0;
        else 
            ap_phi_mux_storemerge_2_phi_fu_491_p4 <= ap_phi_reg_pp1_iter2_storemerge_2_reg_487;
        end if; 
    end process;


    ap_phi_mux_t_V_3_phi_fu_530_p4_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0, ap_enable_reg_pp2_iter1, val_EOP_reg_1801, t_V_3_reg_526, p_0190_2_reg_624)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (val_EOP_reg_1801 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            ap_phi_mux_t_V_3_phi_fu_530_p4 <= p_0190_2_reg_624;
        else 
            ap_phi_mux_t_V_3_phi_fu_530_p4 <= t_V_3_reg_526;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_sr_elem_ptr_write_3_reg_403 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_sr_next_elem_ptr_wri_4_reg_390 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_sr_next_next_elem_pt_4_reg_377 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_output_tmp_V_load_0_reg_463 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_output_tmp_V_load_1_reg_475 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln69_1_reg_445 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln69_2_reg_454 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_phi_ln69_reg_436 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_storemerge_2_reg_487 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp2_iter0_output_fc_V_0_2_reg_563 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp2_iter0_output_fc_V_0_3_reg_608 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp2_iter0_output_fc_V_1_2_reg_550 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp2_iter0_output_fc_V_1_3_reg_592 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp2_iter0_output_fc_V_2_2_reg_537 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp2_iter0_output_fc_V_2_3_reg_576 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp2_iter0_p_0190_2_reg_624 <= "XX";

    ap_predicate_op147_write_state6_assign_proc : process(val_EOP_2_reg_1633, val_col_skip_reg_1624)
    begin
                ap_predicate_op147_write_state6 <= ((val_col_skip_reg_1624 = ap_const_lv1_0) and (val_EOP_2_reg_1633 = ap_const_lv1_0));
    end process;


    ap_predicate_op299_write_state16_assign_proc : process(val_EOP_reg_1801, or_ln178_reg_1829)
    begin
                ap_predicate_op299_write_state16 <= ((or_ln178_reg_1829 = ap_const_lv1_1) and (val_EOP_reg_1801 = ap_const_lv1_0));
    end process;


    ap_predicate_tran6to7_state5_assign_proc : process(grp_fu_647_p1, or_ln230_fu_851_p2)
    begin
                ap_predicate_tran6to7_state5 <= ((or_ln230_fu_851_p2 = ap_const_lv1_1) and (grp_fu_647_p1 = ap_const_lv1_1));
    end process;


    ctrl_0_blk_n_assign_proc : process(ctrl_0_empty_n, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            ctrl_0_blk_n <= ctrl_0_empty_n;
        else 
            ctrl_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    ctrl_0_read_assign_proc : process(ap_CS_fsm_state3, io_acc_block_signal_op75)
    begin
        if (((io_acc_block_signal_op75 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ctrl_0_read <= ap_const_logic_1;
        else 
            ctrl_0_read <= ap_const_logic_0;
        end if; 
    end process;


    ctrl_1_blk_n_assign_proc : process(ctrl_1_empty_n, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            ctrl_1_blk_n <= ctrl_1_empty_n;
        else 
            ctrl_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    ctrl_1_read_assign_proc : process(ap_CS_fsm_state3, io_acc_block_signal_op75)
    begin
        if (((io_acc_block_signal_op75 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ctrl_1_read <= ap_const_logic_1;
        else 
            ctrl_1_read <= ap_const_logic_0;
        end if; 
    end process;


    ctrl_2_blk_n_assign_proc : process(ctrl_2_empty_n, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            ctrl_2_blk_n <= ctrl_2_empty_n;
        else 
            ctrl_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    ctrl_2_read_assign_proc : process(ap_CS_fsm_state3, io_acc_block_signal_op75)
    begin
        if (((io_acc_block_signal_op75 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ctrl_2_read <= ap_const_logic_1;
        else 
            ctrl_2_read <= ap_const_logic_0;
        end if; 
    end process;


    ctrl_3_blk_n_assign_proc : process(ctrl_3_empty_n, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            ctrl_3_blk_n <= ctrl_3_empty_n;
        else 
            ctrl_3_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    ctrl_3_read_assign_proc : process(ap_CS_fsm_state3, io_acc_block_signal_op75)
    begin
        if (((io_acc_block_signal_op75 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ctrl_3_read <= ap_const_logic_1;
        else 
            ctrl_3_read <= ap_const_logic_0;
        end if; 
    end process;


    ctrl_4_blk_n_assign_proc : process(ctrl_4_empty_n, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            ctrl_4_blk_n <= ctrl_4_empty_n;
        else 
            ctrl_4_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    ctrl_4_read_assign_proc : process(ap_CS_fsm_state3, io_acc_block_signal_op75)
    begin
        if (((io_acc_block_signal_op75 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ctrl_4_read <= ap_const_logic_1;
        else 
            ctrl_4_read <= ap_const_logic_0;
        end if; 
    end process;


    ctrl_5_blk_n_assign_proc : process(ctrl_5_empty_n, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            ctrl_5_blk_n <= ctrl_5_empty_n;
        else 
            ctrl_5_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    ctrl_5_read_assign_proc : process(ap_CS_fsm_state3, io_acc_block_signal_op75)
    begin
        if (((io_acc_block_signal_op75 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ctrl_5_read <= ap_const_logic_1;
        else 
            ctrl_5_read <= ap_const_logic_0;
        end if; 
    end process;


    ctrl_6_blk_n_assign_proc : process(ctrl_6_empty_n, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            ctrl_6_blk_n <= ctrl_6_empty_n;
        else 
            ctrl_6_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    ctrl_6_read_assign_proc : process(ap_CS_fsm_state3, io_acc_block_signal_op75)
    begin
        if (((io_acc_block_signal_op75 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ctrl_6_read <= ap_const_logic_1;
        else 
            ctrl_6_read <= ap_const_logic_0;
        end if; 
    end process;


    ctrl_7_blk_n_assign_proc : process(ctrl_7_empty_n, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            ctrl_7_blk_n <= ctrl_7_empty_n;
        else 
            ctrl_7_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    ctrl_7_read_assign_proc : process(ap_CS_fsm_state3, io_acc_block_signal_op75)
    begin
        if (((io_acc_block_signal_op75 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ctrl_7_read <= ap_const_logic_1;
        else 
            ctrl_7_read <= ap_const_logic_0;
        end if; 
    end process;


    din_0_blk_n_assign_proc : process(din_0_empty_n, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_block_pp2_stage0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0)))) then 
            din_0_blk_n <= din_0_empty_n;
        else 
            din_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    din_0_read_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, ap_block_pp2_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)))) then 
            din_0_read <= ap_const_logic_1;
        else 
            din_0_read <= ap_const_logic_0;
        end if; 
    end process;


    din_1_blk_n_assign_proc : process(din_1_empty_n, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_block_pp2_stage0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0)))) then 
            din_1_blk_n <= din_1_empty_n;
        else 
            din_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    din_1_read_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, ap_block_pp2_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)))) then 
            din_1_read <= ap_const_logic_1;
        else 
            din_1_read <= ap_const_logic_0;
        end if; 
    end process;


    din_2_blk_n_assign_proc : process(din_2_empty_n, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_block_pp2_stage0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0)))) then 
            din_2_blk_n <= din_2_empty_n;
        else 
            din_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    din_2_read_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, ap_block_pp2_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)))) then 
            din_2_read <= ap_const_logic_1;
        else 
            din_2_read <= ap_const_logic_0;
        end if; 
    end process;


    din_3_blk_n_assign_proc : process(din_3_empty_n, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_block_pp2_stage0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0)))) then 
            din_3_blk_n <= din_3_empty_n;
        else 
            din_3_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    din_3_read_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, ap_block_pp2_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)))) then 
            din_3_read <= ap_const_logic_1;
        else 
            din_3_read <= ap_const_logic_0;
        end if; 
    end process;


    din_4_blk_n_assign_proc : process(din_4_empty_n, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_block_pp2_stage0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0)))) then 
            din_4_blk_n <= din_4_empty_n;
        else 
            din_4_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    din_4_read_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, ap_block_pp2_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)))) then 
            din_4_read <= ap_const_logic_1;
        else 
            din_4_read <= ap_const_logic_0;
        end if; 
    end process;


    din_5_blk_n_assign_proc : process(din_5_empty_n, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_block_pp2_stage0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0)))) then 
            din_5_blk_n <= din_5_empty_n;
        else 
            din_5_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    din_5_read_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, ap_block_pp2_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)))) then 
            din_5_read <= ap_const_logic_1;
        else 
            din_5_read <= ap_const_logic_0;
        end if; 
    end process;


    din_6_blk_n_assign_proc : process(din_6_empty_n, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_block_pp2_stage0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0)))) then 
            din_6_blk_n <= din_6_empty_n;
        else 
            din_6_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    din_6_read_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, ap_block_pp2_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)))) then 
            din_6_read <= ap_const_logic_1;
        else 
            din_6_read <= ap_const_logic_0;
        end if; 
    end process;


    din_7_blk_n_assign_proc : process(din_7_empty_n, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_block_pp2_stage0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0)))) then 
            din_7_blk_n <= din_7_empty_n;
        else 
            din_7_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    din_7_read_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, ap_block_pp2_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)))) then 
            din_7_read <= ap_const_logic_1;
        else 
            din_7_read <= ap_const_logic_0;
        end if; 
    end process;


    din_8_blk_n_assign_proc : process(din_8_empty_n, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_block_pp2_stage0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0)))) then 
            din_8_blk_n <= din_8_empty_n;
        else 
            din_8_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    din_8_read_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, ap_block_pp2_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)))) then 
            din_8_read <= ap_const_logic_1;
        else 
            din_8_read <= ap_const_logic_0;
        end if; 
    end process;


    din_9_blk_n_assign_proc : process(din_9_empty_n, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_block_pp2_stage0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0)))) then 
            din_9_blk_n <= din_9_empty_n;
        else 
            din_9_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    din_9_read_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, ap_block_pp2_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)))) then 
            din_9_read <= ap_const_logic_1;
        else 
            din_9_read <= ap_const_logic_0;
        end if; 
    end process;


    dout_0_blk_n_assign_proc : process(dout_0_full_n, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp2_iter1, val_EOP_reg_1801, or_ln178_reg_1829, ap_CS_fsm_state18, ap_enable_reg_pp0_iter1, val_EOP_2_reg_1633, val_col_skip_reg_1624, ap_enable_reg_pp1_iter2, ap_block_pp1_stage0, icmp_ln249_reg_1665_pp1_iter1_reg, ap_CS_fsm_state14, val_fc_reg_1590)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or ((ap_const_logic_1 = ap_CS_fsm_state14) and (val_fc_reg_1590 = ap_const_lv1_0)) or ((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln249_reg_1665_pp1_iter1_reg = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (val_col_skip_reg_1624 = ap_const_lv1_0) and (val_EOP_2_reg_1633 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (or_ln178_reg_1829 = ap_const_lv1_1) and (val_EOP_reg_1801 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0)))) then 
            dout_0_blk_n <= dout_0_full_n;
        else 
            dout_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    dout_0_din_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp2_iter1, ap_CS_fsm_state18, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter2, icmp_ln249_reg_1665_pp1_iter1_reg, ap_CS_fsm_state14, val_fc_reg_1590, ap_predicate_op147_write_state6, ap_predicate_op299_write_state16, tmp_data_V_1_reg_1833, io_acc_block_signal_op255, tmp_data_V_fu_877_p4, ap_block_pp0_stage0_01001, tmp_data_V_6_fu_1292_p4, ap_block_pp1_stage0_01001, ap_block_pp2_stage0_01001, io_acc_block_signal_op303)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_01001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_predicate_op299_write_state16 = ap_const_boolean_1))) then 
            dout_0_din <= tmp_data_V_1_reg_1833;
        elsif (((not(((io_acc_block_signal_op255 = ap_const_logic_0) and (val_fc_reg_1590 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state14) and (val_fc_reg_1590 = ap_const_lv1_0)) or ((io_acc_block_signal_op303 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18)))) then 
            dout_0_din <= ap_const_lv384_lc_1;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_01001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (icmp_ln249_reg_1665_pp1_iter1_reg = ap_const_lv1_1))) then 
            dout_0_din <= tmp_data_V_6_fu_1292_p4;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op147_write_state6 = ap_const_boolean_1))) then 
            dout_0_din <= tmp_data_V_fu_877_p4;
        else 
            dout_0_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dout_0_write_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp2_iter1, ap_CS_fsm_state18, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter2, icmp_ln249_reg_1665_pp1_iter1_reg, ap_CS_fsm_state14, val_fc_reg_1590, ap_predicate_op147_write_state6, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_predicate_op299_write_state16, ap_block_pp2_stage0_11001, io_acc_block_signal_op255, io_acc_block_signal_op303)
    begin
        if (((not(((io_acc_block_signal_op255 = ap_const_logic_0) and (val_fc_reg_1590 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state14) and (val_fc_reg_1590 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (icmp_ln249_reg_1665_pp1_iter1_reg = ap_const_lv1_1)) or ((io_acc_block_signal_op303 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op147_write_state6 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_predicate_op299_write_state16 = ap_const_boolean_1)))) then 
            dout_0_write <= ap_const_logic_1;
        else 
            dout_0_write <= ap_const_logic_0;
        end if; 
    end process;


    dout_1_blk_n_assign_proc : process(dout_1_full_n, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp2_iter1, val_EOP_reg_1801, or_ln178_reg_1829, ap_CS_fsm_state18, ap_enable_reg_pp0_iter1, val_EOP_2_reg_1633, val_col_skip_reg_1624, ap_enable_reg_pp1_iter2, ap_block_pp1_stage0, icmp_ln249_reg_1665_pp1_iter1_reg, ap_CS_fsm_state14, val_fc_reg_1590)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or ((ap_const_logic_1 = ap_CS_fsm_state14) and (val_fc_reg_1590 = ap_const_lv1_0)) or ((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln249_reg_1665_pp1_iter1_reg = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (val_col_skip_reg_1624 = ap_const_lv1_0) and (val_EOP_2_reg_1633 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (or_ln178_reg_1829 = ap_const_lv1_1) and (val_EOP_reg_1801 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0)))) then 
            dout_1_blk_n <= dout_1_full_n;
        else 
            dout_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    dout_1_din_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp2_iter1, ap_CS_fsm_state18, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter2, icmp_ln249_reg_1665_pp1_iter1_reg, ap_CS_fsm_state14, val_fc_reg_1590, ap_predicate_op147_write_state6, raw_out_tlast_V_1_reg_1776_pp1_iter1_reg, val_tlast_reg_1796, ap_predicate_op299_write_state16, io_acc_block_signal_op255, ap_block_pp0_stage0_01001, ap_block_pp1_stage0_01001, ap_block_pp2_stage0_01001, io_acc_block_signal_op303, raw_out_tlast_V_fu_989_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_01001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_predicate_op299_write_state16 = ap_const_boolean_1))) then 
            dout_1_din <= val_tlast_reg_1796;
        elsif (((not(((io_acc_block_signal_op255 = ap_const_logic_0) and (val_fc_reg_1590 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state14) and (val_fc_reg_1590 = ap_const_lv1_0)) or ((io_acc_block_signal_op303 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18)))) then 
            dout_1_din <= ap_const_lv1_1;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_01001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (icmp_ln249_reg_1665_pp1_iter1_reg = ap_const_lv1_1))) then 
            dout_1_din <= raw_out_tlast_V_1_reg_1776_pp1_iter1_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op147_write_state6 = ap_const_boolean_1))) then 
            dout_1_din <= raw_out_tlast_V_fu_989_p2;
        else 
            dout_1_din <= "X";
        end if; 
    end process;


    dout_1_write_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp2_iter1, ap_CS_fsm_state18, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter2, icmp_ln249_reg_1665_pp1_iter1_reg, ap_CS_fsm_state14, val_fc_reg_1590, ap_predicate_op147_write_state6, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_predicate_op299_write_state16, ap_block_pp2_stage0_11001, io_acc_block_signal_op255, io_acc_block_signal_op303)
    begin
        if (((not(((io_acc_block_signal_op255 = ap_const_logic_0) and (val_fc_reg_1590 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state14) and (val_fc_reg_1590 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (icmp_ln249_reg_1665_pp1_iter1_reg = ap_const_lv1_1)) or ((io_acc_block_signal_op303 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op147_write_state6 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_predicate_op299_write_state16 = ap_const_boolean_1)))) then 
            dout_1_write <= ap_const_logic_1;
        else 
            dout_1_write <= ap_const_logic_0;
        end if; 
    end process;


    dout_2_blk_n_assign_proc : process(dout_2_full_n, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp2_iter1, val_EOP_reg_1801, or_ln178_reg_1829, ap_CS_fsm_state18, ap_enable_reg_pp0_iter1, val_EOP_2_reg_1633, val_col_skip_reg_1624, ap_enable_reg_pp1_iter2, ap_block_pp1_stage0, icmp_ln249_reg_1665_pp1_iter1_reg, ap_CS_fsm_state14, val_fc_reg_1590)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or ((ap_const_logic_1 = ap_CS_fsm_state14) and (val_fc_reg_1590 = ap_const_lv1_0)) or ((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln249_reg_1665_pp1_iter1_reg = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (val_col_skip_reg_1624 = ap_const_lv1_0) and (val_EOP_2_reg_1633 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (or_ln178_reg_1829 = ap_const_lv1_1) and (val_EOP_reg_1801 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0)))) then 
            dout_2_blk_n <= dout_2_full_n;
        else 
            dout_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    dout_2_din_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp2_iter1, ap_CS_fsm_state18, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter2, icmp_ln249_reg_1665_pp1_iter1_reg, ap_CS_fsm_state14, val_fc_reg_1590, ap_predicate_op147_write_state6, ap_predicate_op299_write_state16, io_acc_block_signal_op255, ap_block_pp0_stage0_01001, ap_block_pp1_stage0_01001, ap_block_pp2_stage0_01001, io_acc_block_signal_op303, tmp_tkeep_V_fu_888_p49, tmp_tkeep_V_6_fu_1303_p49, tmp_tkeep_V_1_fu_1444_p34)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_01001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_predicate_op299_write_state16 = ap_const_boolean_1))) then 
            dout_2_din <= tmp_tkeep_V_1_fu_1444_p34;
        elsif (((not(((io_acc_block_signal_op255 = ap_const_logic_0) and (val_fc_reg_1590 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state14) and (val_fc_reg_1590 = ap_const_lv1_0)) or ((io_acc_block_signal_op303 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18)))) then 
            dout_2_din <= ap_const_lv48_0;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_01001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (icmp_ln249_reg_1665_pp1_iter1_reg = ap_const_lv1_1))) then 
            dout_2_din <= tmp_tkeep_V_6_fu_1303_p49;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op147_write_state6 = ap_const_boolean_1))) then 
            dout_2_din <= tmp_tkeep_V_fu_888_p49;
        else 
            dout_2_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dout_2_write_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp2_iter1, ap_CS_fsm_state18, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter2, icmp_ln249_reg_1665_pp1_iter1_reg, ap_CS_fsm_state14, val_fc_reg_1590, ap_predicate_op147_write_state6, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_predicate_op299_write_state16, ap_block_pp2_stage0_11001, io_acc_block_signal_op255, io_acc_block_signal_op303)
    begin
        if (((not(((io_acc_block_signal_op255 = ap_const_logic_0) and (val_fc_reg_1590 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state14) and (val_fc_reg_1590 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (icmp_ln249_reg_1665_pp1_iter1_reg = ap_const_lv1_1)) or ((io_acc_block_signal_op303 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op147_write_state6 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_predicate_op299_write_state16 = ap_const_boolean_1)))) then 
            dout_2_write <= ap_const_logic_1;
        else 
            dout_2_write <= ap_const_logic_0;
        end if; 
    end process;

    fc_ptr_V_fu_1411_p2 <= std_logic_vector(unsigned(ap_phi_mux_t_V_3_phi_fu_530_p4) + unsigned(ap_const_lv2_1));
    grp_fu_647_p1 <= (0=>din_7_dout, others=>'-');
    grp_fu_651_p2 <= "1" when (signed(val_window_size_reg_1577) > signed(ap_const_lv32_0)) else "0";
    grp_fu_656_p4 <= val_window_size_reg_1577(31 downto 1);
    grp_fu_665_p2 <= "1" when (signed(grp_fu_656_p4) > signed(ap_const_lv31_0)) else "0";
    grp_fu_671_p2 <= "1" when (signed(val_window_size_reg_1577) > signed(ap_const_lv32_2)) else "0";
    i_re_fu_1023_p2 <= std_logic_vector(unsigned(i_re_0_reg_416) + unsigned(ap_const_lv31_1));
    icmp_ln178_fu_1399_p2 <= "1" when (unsigned(ret_V_fu_1393_p2) > unsigned(ap_const_lv3_2)) else "0";
    icmp_ln200_fu_739_p2 <= "1" when (ctrl_5_dout = ap_const_lv32_1) else "0";
    icmp_ln204_fu_1438_p2 <= "0" when (tmp_68_fu_1428_p4 = ap_const_lv2_0) else "1";
    icmp_ln234_fu_1018_p2 <= "1" when (signed(zext_ln234_fu_1014_p1) < signed(N_re_reg_1641)) else "0";
    icmp_ln249_fu_1040_p2 <= "1" when (signed(ap_phi_mux_i4_0_in_phi_fu_430_p4) > signed(ap_const_lv32_0)) else "0";
    icmp_ln269_fu_1146_p2 <= "0" when (trunc_ln242_fu_1052_p1 = ap_const_lv31_0) else "1";
    icmp_ln64_1_fu_810_p2 <= "1" when (signed(add_ln64_1_fu_804_p2) > signed(ap_const_lv32_BF)) else "0";
    icmp_ln64_2_fu_836_p2 <= "1" when (signed(add_ln64_2_fu_830_p2) > signed(ap_const_lv32_BF)) else "0";
    icmp_ln64_fu_784_p2 <= "1" when (signed(add_ln64_fu_778_p2) > signed(ap_const_lv32_BF)) else "0";
    icmp_ln69_1_fu_1092_p2 <= "1" when (signed(sub_ln69_4_fu_1086_p2) > signed(ap_const_lv32_0)) else "0";
    icmp_ln69_2_fu_1122_p2 <= "1" when (signed(sub_ln69_2_fu_1116_p2) > signed(ap_const_lv32_0)) else "0";
    icmp_ln69_fu_1062_p2 <= "1" when (signed(sub_ln69_fu_1056_p2) > signed(ap_const_lv32_0)) else "0";
    icmp_ln70_1_fu_1224_p2 <= "1" when (signed(ap_phi_reg_pp1_iter1_phi_ln69_1_reg_445) < signed(ap_const_lv32_C0)) else "0";
    icmp_ln70_2_fu_1267_p2 <= "1" when (signed(ap_phi_reg_pp1_iter1_phi_ln69_2_reg_454) < signed(ap_const_lv32_C0)) else "0";
    icmp_ln70_fu_1181_p2 <= "1" when (signed(ap_phi_reg_pp1_iter1_phi_ln69_reg_436) < signed(ap_const_lv32_C0)) else "0";
    icmp_ln887_fu_1375_p2 <= "1" when (ap_phi_mux_t_V_3_phi_fu_530_p4 = ap_const_lv2_3) else "0";
    io_acc_block_signal_op101 <= (din_9_empty_n and din_8_empty_n and din_7_empty_n and din_6_empty_n and din_5_empty_n and din_4_empty_n and din_3_empty_n and din_2_empty_n and din_1_empty_n and din_0_empty_n);
    io_acc_block_signal_op147 <= (dout_2_full_n and dout_1_full_n and dout_0_full_n);
    io_acc_block_signal_op250 <= (dout_2_full_n and dout_1_full_n and dout_0_full_n);
    io_acc_block_signal_op255 <= (dout_2_full_n and dout_1_full_n and dout_0_full_n);
    io_acc_block_signal_op268 <= (din_9_empty_n and din_8_empty_n and din_7_empty_n and din_6_empty_n and din_5_empty_n and din_4_empty_n and din_3_empty_n and din_2_empty_n and din_1_empty_n and din_0_empty_n);
    io_acc_block_signal_op299 <= (dout_2_full_n and dout_1_full_n and dout_0_full_n);
    io_acc_block_signal_op303 <= (dout_2_full_n and dout_1_full_n and dout_0_full_n);
    io_acc_block_signal_op75 <= (ctrl_7_empty_n and ctrl_6_empty_n and ctrl_5_empty_n and ctrl_4_empty_n and ctrl_3_empty_n and ctrl_2_empty_n and ctrl_1_empty_n and ctrl_0_empty_n);
    or_ln178_fu_1405_p0 <= (0=>din_6_dout, others=>'-');
    or_ln178_fu_1405_p2 <= (or_ln178_fu_1405_p0 or icmp_ln178_fu_1399_p2);
    or_ln230_fu_851_p0 <= (0=>din_3_dout, others=>'-');
    or_ln230_fu_851_p2 <= (pure_stream_reg_1599 or or_ln230_fu_851_p0);
    or_ln233_fu_995_p2 <= (val_eol_reg_1628 or stide_equal_window_reg_1594);
    or_ln269_fu_1152_p2 <= (pre_stream_reg_1655 or icmp_ln269_fu_1146_p2);
    pre_stream_fu_1029_p2 <= "1" when (zext_ln234_fu_1014_p1 = val_replay_reg_1584) else "0";
    pure_stream_fu_745_p2 <= (stide_equal_window_fu_733_p2 and icmp_ln200_fu_739_p2);
    raw_out_tlast_V_1_fu_1157_p2 <= (or_ln269_fu_1152_p2 xor ap_const_lv1_1);
    raw_out_tlast_V_fu_989_p2 <= (val_skip_reg_1619 xor ap_const_lv1_1);
    ret_V_fu_1393_p2 <= std_logic_vector(unsigned(zext_ln215_fu_1389_p1) + unsigned(ap_const_lv3_1));
    select_ln243_fu_1034_p3 <= 
        val_stride_step_pkg_reg_1572 when (pre_stream_fu_1029_p2(0) = '1') else 
        val_window_size_pkg_reg_1567;
    select_ln70_1_fu_1236_p3 <= 
        trunc_ln70_1_fu_1206_p1 when (and_ln70_1_fu_1230_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln70_2_fu_1279_p3 <= 
        trunc_ln70_2_fu_1249_p1 when (and_ln70_2_fu_1273_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln70_fu_1193_p3 <= 
        trunc_ln70_fu_1163_p1 when (and_ln70_fu_1187_p2(0) = '1') else 
        ap_const_lv8_0;
        sext_ln63_1_fu_799_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_phi_mux_sr_next_elem_ptr_wri_2_phi_fu_360_p4),64));

        sext_ln63_2_fu_825_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_phi_mux_sr_next_next_elem_pt_2_phi_fu_350_p4),64));

        sext_ln63_fu_773_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_phi_mux_sr_elem_ptr_write_2_phi_fu_370_p4),64));

    sr_elem_ptr_write_fu_790_p3 <= 
        ap_const_lv32_0 when (icmp_ln64_fu_784_p2(0) = '1') else 
        add_ln64_fu_778_p2;

    sr_elem_regs_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, sext_ln63_fu_773_p1, zext_ln71_fu_1201_p1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            sr_elem_regs_V_address0 <= zext_ln71_fu_1201_p1(8 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            sr_elem_regs_V_address0 <= sext_ln63_fu_773_p1(8 - 1 downto 0);
        else 
            sr_elem_regs_V_address0 <= "XXXXXXXX";
        end if; 
    end process;


    sr_elem_regs_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sr_elem_regs_V_ce0 <= ap_const_logic_1;
        else 
            sr_elem_regs_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sr_elem_regs_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, grp_fu_647_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (grp_fu_647_p1 = ap_const_lv1_0))) then 
            sr_elem_regs_V_we0 <= ap_const_logic_1;
        else 
            sr_elem_regs_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    sr_next_elem_ptr_wri_5_fu_816_p3 <= 
        ap_const_lv32_0 when (icmp_ln64_1_fu_810_p2(0) = '1') else 
        add_ln64_1_fu_804_p2;

    sr_next_elem_regs_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, sext_ln63_1_fu_799_p1, zext_ln71_1_fu_1244_p1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            sr_next_elem_regs_V_address0 <= zext_ln71_1_fu_1244_p1(8 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            sr_next_elem_regs_V_address0 <= sext_ln63_1_fu_799_p1(8 - 1 downto 0);
        else 
            sr_next_elem_regs_V_address0 <= "XXXXXXXX";
        end if; 
    end process;


    sr_next_elem_regs_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sr_next_elem_regs_V_ce0 <= ap_const_logic_1;
        else 
            sr_next_elem_regs_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sr_next_elem_regs_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, grp_fu_647_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (grp_fu_647_p1 = ap_const_lv1_0))) then 
            sr_next_elem_regs_V_we0 <= ap_const_logic_1;
        else 
            sr_next_elem_regs_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    sr_next_next_elem_pt_5_fu_842_p3 <= 
        ap_const_lv32_0 when (icmp_ln64_2_fu_836_p2(0) = '1') else 
        add_ln64_2_fu_830_p2;

    sr_next_next_elem_re_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, sext_ln63_2_fu_825_p1, zext_ln71_2_fu_1287_p1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            sr_next_next_elem_re_address0 <= zext_ln71_2_fu_1287_p1(8 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            sr_next_next_elem_re_address0 <= sext_ln63_2_fu_825_p1(8 - 1 downto 0);
        else 
            sr_next_next_elem_re_address0 <= "XXXXXXXX";
        end if; 
    end process;


    sr_next_next_elem_re_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sr_next_next_elem_re_ce0 <= ap_const_logic_1;
        else 
            sr_next_next_elem_re_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sr_next_next_elem_re_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, grp_fu_647_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (grp_fu_647_p1 = ap_const_lv1_0))) then 
            sr_next_next_elem_re_we0 <= ap_const_logic_1;
        else 
            sr_next_next_elem_re_we0 <= ap_const_logic_0;
        end if; 
    end process;

    start_pos_fu_1046_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(ap_phi_mux_i4_0_in_phi_fu_430_p4));
    stide_equal_window_fu_733_p2 <= "1" when (ctrl_2_dout = ctrl_4_dout) else "0";
    sub_ln69_1_fu_1080_p2 <= std_logic_vector(unsigned(sr_elem_ptr_write_3_reg_403) - unsigned(ap_phi_mux_i4_0_in_phi_fu_430_p4));
    sub_ln69_2_fu_1116_p2 <= std_logic_vector(unsigned(sr_next_next_elem_pt_4_reg_377) - unsigned(start_pos_fu_1046_p2));
    sub_ln69_3_fu_1068_p2 <= std_logic_vector(unsigned(ap_const_lv32_C0) - unsigned(ap_phi_mux_i4_0_in_phi_fu_430_p4));
    sub_ln69_4_fu_1086_p2 <= std_logic_vector(unsigned(sr_next_elem_ptr_wri_4_reg_390) - unsigned(start_pos_fu_1046_p2));
    sub_ln69_5_fu_1110_p2 <= std_logic_vector(unsigned(sr_next_elem_ptr_wri_4_reg_390) - unsigned(ap_phi_mux_i4_0_in_phi_fu_430_p4));
    sub_ln69_6_fu_1098_p2 <= std_logic_vector(unsigned(ap_const_lv32_C0) - unsigned(ap_phi_mux_i4_0_in_phi_fu_430_p4));
    sub_ln69_7_fu_1140_p2 <= std_logic_vector(unsigned(sr_next_next_elem_pt_4_reg_377) - unsigned(ap_phi_mux_i4_0_in_phi_fu_430_p4));
    sub_ln69_8_fu_1128_p2 <= std_logic_vector(unsigned(ap_const_lv32_C0) - unsigned(ap_phi_mux_i4_0_in_phi_fu_430_p4));
    sub_ln69_fu_1056_p2 <= std_logic_vector(unsigned(sr_elem_ptr_write_3_reg_403) - unsigned(start_pos_fu_1046_p2));
    t_V_fu_1381_p3 <= 
        ap_const_lv2_0 when (icmp_ln887_fu_1375_p2(0) = '1') else 
        ap_phi_mux_t_V_3_phi_fu_530_p4;
    tmp_68_fu_1428_p4 <= ret_V_fu_1393_p2(2 downto 1);
    tmp_69_fu_1167_p3 <= ap_phi_reg_pp1_iter1_phi_ln69_reg_436(31 downto 31);
    tmp_71_fu_1210_p3 <= ap_phi_reg_pp1_iter1_phi_ln69_1_reg_445(31 downto 31);
    tmp_72_fu_1253_p3 <= ap_phi_reg_pp1_iter1_phi_ln69_2_reg_454(31 downto 31);
    tmp_data_V_1_fu_1418_p4 <= ((ap_phi_mux_output_fc_V_2_2_phi_fu_540_p6 & ap_phi_mux_output_fc_V_1_2_phi_fu_553_p6) & ap_phi_mux_output_fc_V_0_2_phi_fu_566_p6);
    tmp_data_V_6_fu_1292_p4 <= ((ap_phi_mux_storemerge_2_phi_fu_491_p4 & ap_phi_mux_output_tmp_V_load_1_phi_fu_479_p4) & ap_phi_mux_output_tmp_V_load_0_phi_fu_467_p4);
    tmp_data_V_fu_877_p4 <= ((tmp_in_window_next_n_fu_870_p3 & tmp_in_window_next_e_fu_863_p3) & tmp_in_window_elem_V_1_fu_856_p3);
    tmp_in_window_elem_V_1_fu_856_p3 <= 
        val_window_elem_V_7_reg_1604 when (grp_fu_651_p2(0) = '1') else 
        ap_const_lv128_lc_1;
    tmp_in_window_next_e_fu_863_p3 <= 
        val_window_next_elem_reg_1609 when (grp_fu_665_p2(0) = '1') else 
        ap_const_lv128_lc_1;
    tmp_in_window_next_n_fu_870_p3 <= 
        val_window_next_next_reg_1614 when (grp_fu_671_p2(0) = '1') else 
        ap_const_lv128_lc_1;
    tmp_tkeep_V_1_fu_1444_p34 <= ((((((((((((((((((((((((((((((((icmp_ln178_reg_1809 & icmp_ln178_reg_1809) & icmp_ln178_reg_1809) & icmp_ln178_reg_1809) & icmp_ln178_reg_1809) & icmp_ln178_reg_1809) & icmp_ln178_reg_1809) & icmp_ln178_reg_1809) & icmp_ln178_reg_1809) & icmp_ln178_reg_1809) & icmp_ln178_reg_1809) & icmp_ln178_reg_1809) & icmp_ln178_reg_1809) & icmp_ln178_reg_1809) & icmp_ln178_reg_1809) & icmp_ln178_reg_1809) & icmp_ln204_reg_1838) & icmp_ln204_reg_1838) & icmp_ln204_reg_1838) & icmp_ln204_reg_1838) & icmp_ln204_reg_1838) & icmp_ln204_reg_1838) & icmp_ln204_reg_1838) & icmp_ln204_reg_1838) & icmp_ln204_reg_1838) & icmp_ln204_reg_1838) & icmp_ln204_reg_1838) & icmp_ln204_reg_1838) & icmp_ln204_reg_1838) & icmp_ln204_reg_1838) & icmp_ln204_reg_1838) & icmp_ln204_reg_1838) & ap_const_lv16_FFFF);
    tmp_tkeep_V_6_fu_1303_p49 <= (((((((((((((((((((((((((((((((((((((((((((((((icmp_ln258_2_reg_1742_pp1_iter1_reg & icmp_ln258_2_reg_1742_pp1_iter1_reg) & icmp_ln258_2_reg_1742_pp1_iter1_reg) & icmp_ln258_2_reg_1742_pp1_iter1_reg) & icmp_ln258_2_reg_1742_pp1_iter1_reg) & icmp_ln258_2_reg_1742_pp1_iter1_reg) & icmp_ln258_2_reg_1742_pp1_iter1_reg) & icmp_ln258_2_reg_1742_pp1_iter1_reg) & icmp_ln258_2_reg_1742_pp1_iter1_reg) & icmp_ln258_2_reg_1742_pp1_iter1_reg) & icmp_ln258_2_reg_1742_pp1_iter1_reg) & icmp_ln258_2_reg_1742_pp1_iter1_reg) & icmp_ln258_2_reg_1742_pp1_iter1_reg) & icmp_ln258_2_reg_1742_pp1_iter1_reg) & icmp_ln258_2_reg_1742_pp1_iter1_reg) & icmp_ln258_2_reg_1742_pp1_iter1_reg) & icmp_ln258_1_reg_1708_pp1_iter1_reg) & icmp_ln258_1_reg_1708_pp1_iter1_reg) & icmp_ln258_1_reg_1708_pp1_iter1_reg) & icmp_ln258_1_reg_1708_pp1_iter1_reg) & icmp_ln258_1_reg_1708_pp1_iter1_reg) & icmp_ln258_1_reg_1708_pp1_iter1_reg) & icmp_ln258_1_reg_1708_pp1_iter1_reg) & icmp_ln258_1_reg_1708_pp1_iter1_reg) & icmp_ln258_1_reg_1708_pp1_iter1_reg) & icmp_ln258_1_reg_1708_pp1_iter1_reg) & icmp_ln258_1_reg_1708_pp1_iter1_reg) & icmp_ln258_1_reg_1708_pp1_iter1_reg) & icmp_ln258_1_reg_1708_pp1_iter1_reg) & icmp_ln258_1_reg_1708_pp1_iter1_reg) & icmp_ln258_1_reg_1708_pp1_iter1_reg) & icmp_ln258_1_reg_1708_pp1_iter1_reg) & icmp_ln258_reg_1674_pp1_iter1_reg) & icmp_ln258_reg_1674_pp1_iter1_reg) & icmp_ln258_reg_1674_pp1_iter1_reg) & icmp_ln258_reg_1674_pp1_iter1_reg) & icmp_ln258_reg_1674_pp1_iter1_reg) & icmp_ln258_reg_1674_pp1_iter1_reg) & icmp_ln258_reg_1674_pp1_iter1_reg) & icmp_ln258_reg_1674_pp1_iter1_reg) & icmp_ln258_reg_1674_pp1_iter1_reg) & icmp_ln258_reg_1674_pp1_iter1_reg) & icmp_ln258_reg_1674_pp1_iter1_reg) & icmp_ln258_reg_1674_pp1_iter1_reg) & icmp_ln258_reg_1674_pp1_iter1_reg) & icmp_ln258_reg_1674_pp1_iter1_reg) & icmp_ln258_reg_1674_pp1_iter1_reg) & icmp_ln258_reg_1674_pp1_iter1_reg);
    tmp_tkeep_V_fu_888_p49 <= (((((((((((((((((((((((((((((((((((((((((((((((grp_fu_671_p2 & grp_fu_671_p2) & grp_fu_671_p2) & grp_fu_671_p2) & grp_fu_671_p2) & grp_fu_671_p2) & grp_fu_671_p2) & grp_fu_671_p2) & grp_fu_671_p2) & grp_fu_671_p2) & grp_fu_671_p2) & grp_fu_671_p2) & grp_fu_671_p2) & grp_fu_671_p2) & grp_fu_671_p2) & grp_fu_671_p2) & grp_fu_665_p2) & grp_fu_665_p2) & grp_fu_665_p2) & grp_fu_665_p2) & grp_fu_665_p2) & grp_fu_665_p2) & grp_fu_665_p2) & grp_fu_665_p2) & grp_fu_665_p2) & grp_fu_665_p2) & grp_fu_665_p2) & grp_fu_665_p2) & grp_fu_665_p2) & grp_fu_665_p2) & grp_fu_665_p2) & grp_fu_665_p2) & grp_fu_651_p2) & grp_fu_651_p2) & grp_fu_651_p2) & grp_fu_651_p2) & grp_fu_651_p2) & grp_fu_651_p2) & grp_fu_651_p2) & grp_fu_651_p2) & grp_fu_651_p2) & grp_fu_651_p2) & grp_fu_651_p2) & grp_fu_651_p2) & grp_fu_651_p2) & grp_fu_651_p2) & grp_fu_651_p2) & grp_fu_651_p2);
    trunc_ln242_fu_1052_p1 <= start_pos_fu_1046_p2(31 - 1 downto 0);
    trunc_ln70_1_fu_1206_p1 <= ap_phi_reg_pp1_iter1_phi_ln69_1_reg_445(8 - 1 downto 0);
    trunc_ln70_2_fu_1249_p1 <= ap_phi_reg_pp1_iter1_phi_ln69_2_reg_454(8 - 1 downto 0);
    trunc_ln70_fu_1163_p1 <= ap_phi_reg_pp1_iter1_phi_ln69_reg_436(8 - 1 downto 0);
    val_fc_fu_729_p1 <= (0=>ctrl_7_dout, others=>'-');
    xor_ln233_fu_999_p2 <= (or_ln233_fu_995_p2 xor ap_const_lv1_1);
    xor_ln70_1_fu_1218_p2 <= (tmp_71_fu_1210_p3 xor ap_const_lv1_1);
    xor_ln70_2_fu_1261_p2 <= (tmp_72_fu_1253_p3 xor ap_const_lv1_1);
    xor_ln70_fu_1175_p2 <= (tmp_69_fu_1167_p3 xor ap_const_lv1_1);
    zext_ln215_fu_1389_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_t_V_3_phi_fu_530_p4),3));
    zext_ln233_fu_1005_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln233_fu_999_p2),32));
    zext_ln234_fu_1014_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_re_0_reg_416),32));
    zext_ln71_1_fu_1244_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln70_1_fu_1236_p3),64));
    zext_ln71_2_fu_1287_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln70_2_fu_1279_p3),64));
    zext_ln71_fu_1201_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln70_fu_1193_p3),64));
end behav;
