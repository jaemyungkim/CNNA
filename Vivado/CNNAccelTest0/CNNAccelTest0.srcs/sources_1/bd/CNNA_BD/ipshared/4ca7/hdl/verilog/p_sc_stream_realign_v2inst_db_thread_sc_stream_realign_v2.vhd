-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity p_sc_stream_realign_v2inst_db_thread_sc_stream_realign_v2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ctrl_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    ctrl_empty_n : IN STD_LOGIC;
    ctrl_read : OUT STD_LOGIC;
    din_0_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    din_0_empty_n : IN STD_LOGIC;
    din_0_read : OUT STD_LOGIC;
    din_1_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    din_1_empty_n : IN STD_LOGIC;
    din_1_read : OUT STD_LOGIC;
    din_2_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    din_2_empty_n : IN STD_LOGIC;
    din_2_read : OUT STD_LOGIC;
    dout_0_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    dout_0_full_n : IN STD_LOGIC;
    dout_0_write : OUT STD_LOGIC;
    dout_1_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    dout_1_full_n : IN STD_LOGIC;
    dout_1_write : OUT STD_LOGIC;
    dout_2_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    dout_2_full_n : IN STD_LOGIC;
    dout_2_write : OUT STD_LOGIC );
end;


architecture behav of p_sc_stream_realign_v2inst_db_thread_sc_stream_realign_v2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv128_lc_1 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv33_1FFFFFFFF : STD_LOGIC_VECTOR (32 downto 0) := "111111111111111111111111111111111";

    signal ctrl_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal din_0_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln156_fu_193_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal din_1_blk_n : STD_LOGIC;
    signal din_2_blk_n : STD_LOGIC;
    signal dout_0_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal icmp_ln156_reg_234 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal dout_1_blk_n : STD_LOGIC;
    signal dout_2_blk_n : STD_LOGIC;
    signal p_0108_1_reg_114 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_op_assign_reg_126 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_0108_1_be_reg_137 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_op_assign_be_reg_149 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_V_reg_220 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln879_fu_177_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_fu_187_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_reg_229 : STD_LOGIC_VECTOR (32 downto 0);
    signal io_acc_block_signal_op39 : STD_LOGIC;
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal io_acc_block_signal_op54 : STD_LOGIC;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal val_data_V_4_reg_238 : STD_LOGIC_VECTOR (127 downto 0);
    signal val_tkeep_V_4_reg_243 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_tlast_V_5_fu_207_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_tlast_V_5_reg_248 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_phi_mux_p_0108_1_phi_fu_118_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_tran4to5_state3 : BOOLEAN;
    signal ap_phi_mux_i_op_assign_phi_fu_130_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_166_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_p_0108_1_be_reg_137 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_213_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_i_op_assign_be_reg_149 : STD_LOGIC_VECTOR (31 downto 0);
    signal io_acc_block_signal_op63 : STD_LOGIC;
    signal io_acc_block_signal_op67 : STD_LOGIC;
    signal ap_block_state6 : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal io_acc_block_signal_op59 : STD_LOGIC;
    signal zext_ln1354_fu_183_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln879_fu_198_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln879_1_fu_202_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_129 : BOOLEAN;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state2;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_predicate_tran4to5_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln879_fu_177_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ctrl_empty_n = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((icmp_ln879_fu_177_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ctrl_empty_n = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_op_assign_be_reg_149_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_129)) then
                if (((ap_phi_mux_p_0108_1_phi_fu_118_p4 = ap_const_lv1_0) and (icmp_ln156_fu_193_p2 = ap_const_lv1_1))) then 
                    i_op_assign_be_reg_149 <= ap_const_lv32_0;
                elsif ((icmp_ln156_fu_193_p2 = ap_const_lv1_0)) then 
                    i_op_assign_be_reg_149 <= i_fu_213_p2;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    i_op_assign_be_reg_149 <= ap_phi_reg_pp0_iter0_i_op_assign_be_reg_149;
                end if;
            end if; 
        end if;
    end process;

    i_op_assign_reg_126_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and ((p_0108_1_reg_114 = ap_const_lv1_0) or (icmp_ln156_reg_234 = ap_const_lv1_0)))) then 
                i_op_assign_reg_126 <= i_op_assign_be_reg_149;
            elsif (((icmp_ln879_fu_177_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ctrl_empty_n = ap_const_logic_1))) then 
                i_op_assign_reg_126 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    p_0108_1_be_reg_137_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_129)) then
                if (((ap_phi_mux_p_0108_1_phi_fu_118_p4 = ap_const_lv1_0) and (icmp_ln156_fu_193_p2 = ap_const_lv1_1))) then 
                    p_0108_1_be_reg_137 <= ap_phi_mux_p_0108_1_phi_fu_118_p4;
                elsif ((icmp_ln156_fu_193_p2 = ap_const_lv1_0)) then 
                    p_0108_1_be_reg_137 <= din_1_dout;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    p_0108_1_be_reg_137 <= ap_phi_reg_pp0_iter0_p_0108_1_be_reg_137;
                end if;
            end if; 
        end if;
    end process;

    p_0108_1_reg_114_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and ((p_0108_1_reg_114 = ap_const_lv1_0) or (icmp_ln156_reg_234 = ap_const_lv1_0)))) then 
                p_0108_1_reg_114 <= p_0108_1_be_reg_137;
            elsif (((icmp_ln879_fu_177_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ctrl_empty_n = ap_const_logic_1))) then 
                p_0108_1_reg_114 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln156_reg_234 <= icmp_ln156_fu_193_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln879_fu_177_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ctrl_empty_n = ap_const_logic_1))) then
                ret_V_reg_229 <= ret_V_fu_187_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln156_fu_193_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_tlast_V_5_reg_248 <= tmp_tlast_V_5_fu_207_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ctrl_empty_n = ap_const_logic_1))) then
                val_V_reg_220 <= ctrl_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln156_fu_193_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                val_data_V_4_reg_238 <= din_0_dout;
                val_tkeep_V_4_reg_243 <= din_2_dout;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ctrl_empty_n, ap_CS_fsm, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state5, icmp_ln879_fu_177_p2, ap_block_pp0_stage0_subdone, grp_fu_166_p1, io_acc_block_signal_op63, io_acc_block_signal_op67, io_acc_block_signal_op59)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ctrl_empty_n = ap_const_logic_1) and (icmp_ln879_fu_177_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                elsif (((icmp_ln879_fu_177_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ctrl_empty_n = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (io_acc_block_signal_op59 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if ((not(((io_acc_block_signal_op67 = ap_const_logic_0) or (io_acc_block_signal_op63 = ap_const_logic_0))) and (grp_fu_166_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                elsif ((not(((io_acc_block_signal_op67 = ap_const_logic_0) or (io_acc_block_signal_op63 = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6) and (grp_fu_166_p1 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state5 <= ap_CS_fsm(3);
    ap_CS_fsm_state6 <= ap_CS_fsm(4);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln156_fu_193_p2, ap_enable_reg_pp0_iter1, icmp_ln156_reg_234, io_acc_block_signal_op39, io_acc_block_signal_op54)
    begin
                ap_block_pp0_stage0_01001 <= (((icmp_ln156_reg_234 = ap_const_lv1_0) and (io_acc_block_signal_op54 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((icmp_ln156_fu_193_p2 = ap_const_lv1_0) and (io_acc_block_signal_op39 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln156_fu_193_p2, ap_enable_reg_pp0_iter1, icmp_ln156_reg_234, io_acc_block_signal_op39, io_acc_block_signal_op54)
    begin
                ap_block_pp0_stage0_11001 <= (((icmp_ln156_reg_234 = ap_const_lv1_0) and (io_acc_block_signal_op54 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((icmp_ln156_fu_193_p2 = ap_const_lv1_0) and (io_acc_block_signal_op39 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln156_fu_193_p2, ap_enable_reg_pp0_iter1, icmp_ln156_reg_234, io_acc_block_signal_op39, io_acc_block_signal_op54)
    begin
                ap_block_pp0_stage0_subdone <= (((icmp_ln156_reg_234 = ap_const_lv1_0) and (io_acc_block_signal_op54 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((icmp_ln156_fu_193_p2 = ap_const_lv1_0) and (io_acc_block_signal_op39 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_state3_pp0_stage0_iter0_assign_proc : process(icmp_ln156_fu_193_p2, io_acc_block_signal_op39)
    begin
                ap_block_state3_pp0_stage0_iter0 <= ((icmp_ln156_fu_193_p2 = ap_const_lv1_0) and (io_acc_block_signal_op39 = ap_const_logic_0));
    end process;


    ap_block_state4_pp0_stage0_iter1_assign_proc : process(icmp_ln156_reg_234, io_acc_block_signal_op54)
    begin
                ap_block_state4_pp0_stage0_iter1 <= ((icmp_ln156_reg_234 = ap_const_lv1_0) and (io_acc_block_signal_op54 = ap_const_logic_0));
    end process;


    ap_block_state6_assign_proc : process(io_acc_block_signal_op63, io_acc_block_signal_op67)
    begin
                ap_block_state6 <= ((io_acc_block_signal_op67 = ap_const_logic_0) or (io_acc_block_signal_op63 = ap_const_logic_0));
    end process;


    ap_condition_129_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_129 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i_op_assign_phi_fu_130_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln156_reg_234, p_0108_1_reg_114, i_op_assign_reg_126, i_op_assign_be_reg_149)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and ((p_0108_1_reg_114 = ap_const_lv1_0) or (icmp_ln156_reg_234 = ap_const_lv1_0)))) then 
            ap_phi_mux_i_op_assign_phi_fu_130_p4 <= i_op_assign_be_reg_149;
        else 
            ap_phi_mux_i_op_assign_phi_fu_130_p4 <= i_op_assign_reg_126;
        end if; 
    end process;


    ap_phi_mux_p_0108_1_phi_fu_118_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln156_reg_234, p_0108_1_reg_114, p_0108_1_be_reg_137)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and ((p_0108_1_reg_114 = ap_const_lv1_0) or (icmp_ln156_reg_234 = ap_const_lv1_0)))) then 
            ap_phi_mux_p_0108_1_phi_fu_118_p4 <= p_0108_1_be_reg_137;
        else 
            ap_phi_mux_p_0108_1_phi_fu_118_p4 <= p_0108_1_reg_114;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_i_op_assign_be_reg_149 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_p_0108_1_be_reg_137 <= "X";

    ap_predicate_tran4to5_state3_assign_proc : process(icmp_ln156_fu_193_p2, ap_phi_mux_p_0108_1_phi_fu_118_p4)
    begin
                ap_predicate_tran4to5_state3 <= ((icmp_ln156_fu_193_p2 = ap_const_lv1_1) and (ap_phi_mux_p_0108_1_phi_fu_118_p4 = ap_const_lv1_1));
    end process;


    ctrl_blk_n_assign_proc : process(ctrl_empty_n, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            ctrl_blk_n <= ctrl_empty_n;
        else 
            ctrl_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    ctrl_read_assign_proc : process(ctrl_empty_n, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ctrl_empty_n = ap_const_logic_1))) then 
            ctrl_read <= ap_const_logic_1;
        else 
            ctrl_read <= ap_const_logic_0;
        end if; 
    end process;


    din_0_blk_n_assign_proc : process(din_0_empty_n, ap_CS_fsm_state6, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, icmp_ln156_fu_193_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln156_fu_193_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            din_0_blk_n <= din_0_empty_n;
        else 
            din_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    din_0_read_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln156_fu_193_p2, ap_block_pp0_stage0_11001, io_acc_block_signal_op63, io_acc_block_signal_op67)
    begin
        if ((((icmp_ln156_fu_193_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or (not(((io_acc_block_signal_op67 = ap_const_logic_0) or (io_acc_block_signal_op63 = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            din_0_read <= ap_const_logic_1;
        else 
            din_0_read <= ap_const_logic_0;
        end if; 
    end process;


    din_1_blk_n_assign_proc : process(din_1_empty_n, ap_CS_fsm_state6, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, icmp_ln156_fu_193_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln156_fu_193_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            din_1_blk_n <= din_1_empty_n;
        else 
            din_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    din_1_read_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln156_fu_193_p2, ap_block_pp0_stage0_11001, io_acc_block_signal_op63, io_acc_block_signal_op67)
    begin
        if ((((icmp_ln156_fu_193_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or (not(((io_acc_block_signal_op67 = ap_const_logic_0) or (io_acc_block_signal_op63 = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            din_1_read <= ap_const_logic_1;
        else 
            din_1_read <= ap_const_logic_0;
        end if; 
    end process;


    din_2_blk_n_assign_proc : process(din_2_empty_n, ap_CS_fsm_state6, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, icmp_ln156_fu_193_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln156_fu_193_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            din_2_blk_n <= din_2_empty_n;
        else 
            din_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    din_2_read_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln156_fu_193_p2, ap_block_pp0_stage0_11001, io_acc_block_signal_op63, io_acc_block_signal_op67)
    begin
        if ((((icmp_ln156_fu_193_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or (not(((io_acc_block_signal_op67 = ap_const_logic_0) or (io_acc_block_signal_op63 = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            din_2_read <= ap_const_logic_1;
        else 
            din_2_read <= ap_const_logic_0;
        end if; 
    end process;


    dout_0_blk_n_assign_proc : process(dout_0_full_n, ap_CS_fsm_state6, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln156_reg_234, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln156_reg_234 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            dout_0_blk_n <= dout_0_full_n;
        else 
            dout_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    dout_0_din_assign_proc : process(din_0_dout, ap_CS_fsm_state6, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln156_reg_234, ap_CS_fsm_state5, val_data_V_4_reg_238, io_acc_block_signal_op63, io_acc_block_signal_op67, ap_block_pp0_stage0_01001, io_acc_block_signal_op59)
    begin
        if ((not(((io_acc_block_signal_op67 = ap_const_logic_0) or (io_acc_block_signal_op63 = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            dout_0_din <= din_0_dout;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (io_acc_block_signal_op59 = ap_const_logic_1))) then 
            dout_0_din <= ap_const_lv128_lc_1;
        elsif (((icmp_ln156_reg_234 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001))) then 
            dout_0_din <= val_data_V_4_reg_238;
        else 
            dout_0_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dout_0_write_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln156_reg_234, ap_CS_fsm_state5, ap_block_pp0_stage0_11001, io_acc_block_signal_op63, io_acc_block_signal_op67, io_acc_block_signal_op59)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state5) and (io_acc_block_signal_op59 = ap_const_logic_1)) or ((icmp_ln156_reg_234 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or (not(((io_acc_block_signal_op67 = ap_const_logic_0) or (io_acc_block_signal_op63 = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            dout_0_write <= ap_const_logic_1;
        else 
            dout_0_write <= ap_const_logic_0;
        end if; 
    end process;


    dout_1_blk_n_assign_proc : process(dout_1_full_n, ap_CS_fsm_state6, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln156_reg_234, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln156_reg_234 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            dout_1_blk_n <= dout_1_full_n;
        else 
            dout_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    dout_1_din_assign_proc : process(din_1_dout, ap_CS_fsm_state6, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln156_reg_234, ap_CS_fsm_state5, tmp_tlast_V_5_reg_248, io_acc_block_signal_op63, io_acc_block_signal_op67, ap_block_pp0_stage0_01001, io_acc_block_signal_op59)
    begin
        if ((not(((io_acc_block_signal_op67 = ap_const_logic_0) or (io_acc_block_signal_op63 = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            dout_1_din <= din_1_dout;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (io_acc_block_signal_op59 = ap_const_logic_1))) then 
            dout_1_din <= ap_const_lv1_1;
        elsif (((icmp_ln156_reg_234 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001))) then 
            dout_1_din <= tmp_tlast_V_5_reg_248;
        else 
            dout_1_din <= "X";
        end if; 
    end process;


    dout_1_write_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln156_reg_234, ap_CS_fsm_state5, ap_block_pp0_stage0_11001, io_acc_block_signal_op63, io_acc_block_signal_op67, io_acc_block_signal_op59)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state5) and (io_acc_block_signal_op59 = ap_const_logic_1)) or ((icmp_ln156_reg_234 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or (not(((io_acc_block_signal_op67 = ap_const_logic_0) or (io_acc_block_signal_op63 = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            dout_1_write <= ap_const_logic_1;
        else 
            dout_1_write <= ap_const_logic_0;
        end if; 
    end process;


    dout_2_blk_n_assign_proc : process(dout_2_full_n, ap_CS_fsm_state6, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln156_reg_234, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln156_reg_234 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            dout_2_blk_n <= dout_2_full_n;
        else 
            dout_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    dout_2_din_assign_proc : process(din_2_dout, ap_CS_fsm_state6, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln156_reg_234, ap_CS_fsm_state5, val_tkeep_V_4_reg_243, io_acc_block_signal_op63, io_acc_block_signal_op67, ap_block_pp0_stage0_01001, io_acc_block_signal_op59)
    begin
        if ((not(((io_acc_block_signal_op67 = ap_const_logic_0) or (io_acc_block_signal_op63 = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            dout_2_din <= din_2_dout;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (io_acc_block_signal_op59 = ap_const_logic_1))) then 
            dout_2_din <= ap_const_lv16_0;
        elsif (((icmp_ln156_reg_234 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001))) then 
            dout_2_din <= val_tkeep_V_4_reg_243;
        else 
            dout_2_din <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dout_2_write_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln156_reg_234, ap_CS_fsm_state5, ap_block_pp0_stage0_11001, io_acc_block_signal_op63, io_acc_block_signal_op67, io_acc_block_signal_op59)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state5) and (io_acc_block_signal_op59 = ap_const_logic_1)) or ((icmp_ln156_reg_234 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or (not(((io_acc_block_signal_op67 = ap_const_logic_0) or (io_acc_block_signal_op63 = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            dout_2_write <= ap_const_logic_1;
        else 
            dout_2_write <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_166_p1 <= din_1_dout;
    i_fu_213_p2 <= std_logic_vector(signed(ap_phi_mux_i_op_assign_phi_fu_130_p4) + signed(ap_const_lv32_1));
    icmp_ln156_fu_193_p2 <= "1" when (ap_phi_mux_i_op_assign_phi_fu_130_p4 = val_V_reg_220) else "0";
    icmp_ln879_1_fu_202_p2 <= "1" when (sext_ln879_fu_198_p1 = ret_V_reg_229) else "0";
    icmp_ln879_fu_177_p2 <= "1" when (ctrl_dout = ap_const_lv32_0) else "0";
    io_acc_block_signal_op39 <= (din_2_empty_n and din_1_empty_n and din_0_empty_n);
    io_acc_block_signal_op54 <= (dout_2_full_n and dout_1_full_n and dout_0_full_n);
    io_acc_block_signal_op59 <= (dout_2_full_n and dout_1_full_n and dout_0_full_n);
    io_acc_block_signal_op63 <= (din_2_empty_n and din_1_empty_n and din_0_empty_n);
    io_acc_block_signal_op67 <= (dout_2_full_n and dout_1_full_n and dout_0_full_n);
    ret_V_fu_187_p2 <= std_logic_vector(unsigned(zext_ln1354_fu_183_p1) + unsigned(ap_const_lv33_1FFFFFFFF));
        sext_ln879_fu_198_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_phi_mux_i_op_assign_phi_fu_130_p4),33));

    tmp_tlast_V_5_fu_207_p2 <= (icmp_ln879_1_fu_202_p2 or din_1_dout);
    zext_ln1354_fu_183_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ctrl_dout),33));
end behav;
