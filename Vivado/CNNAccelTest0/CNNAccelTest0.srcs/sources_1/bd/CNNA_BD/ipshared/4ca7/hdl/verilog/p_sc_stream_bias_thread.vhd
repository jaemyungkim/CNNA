-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity p_sc_stream_bias_thread is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    din_0_dout : IN STD_LOGIC_VECTOR (383 downto 0);
    din_0_empty_n : IN STD_LOGIC;
    din_0_read : OUT STD_LOGIC;
    din_1_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    din_1_empty_n : IN STD_LOGIC;
    din_1_read : OUT STD_LOGIC;
    din_2_dout : IN STD_LOGIC_VECTOR (47 downto 0);
    din_2_empty_n : IN STD_LOGIC;
    din_2_read : OUT STD_LOGIC;
    dout_0_din : OUT STD_LOGIC_VECTOR (399 downto 0);
    dout_0_full_n : IN STD_LOGIC;
    dout_0_write : OUT STD_LOGIC;
    dout_1_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    dout_1_full_n : IN STD_LOGIC;
    dout_1_write : OUT STD_LOGIC;
    dout_2_din : OUT STD_LOGIC_VECTOR (49 downto 0);
    dout_2_full_n : IN STD_LOGIC;
    dout_2_write : OUT STD_LOGIC );
end;


architecture behav of p_sc_stream_bias_thread is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv400_lc_1 : STD_LOGIC_VECTOR (399 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv50_0 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";

    signal din_0_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal din_1_blk_n : STD_LOGIC;
    signal din_2_blk_n : STD_LOGIC;
    signal dout_0_blk_n : STD_LOGIC;
    signal grp_fu_168_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln140_fu_177_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_80_fu_181_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal dout_1_blk_n : STD_LOGIC;
    signal dout_2_blk_n : STD_LOGIC;
    signal io_acc_block_signal_op25 : STD_LOGIC;
    signal io_acc_block_signal_op34 : STD_LOGIC;
    signal ap_predicate_op34_write_state2 : BOOLEAN;
    signal ap_block_state2 : BOOLEAN;
    signal out_buf_24_V_fu_189_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_buf_V_24_0_reg_154 : STD_LOGIC_VECTOR (15 downto 0);
    signal io_acc_block_signal_op41 : STD_LOGIC;
    signal io_acc_block_signal_op71 : STD_LOGIC;
    signal ap_block_state3 : BOOLEAN;
    signal tmp_data_V_fu_193_p3 : STD_LOGIC_VECTOR (399 downto 0);
    signal tmp_tkeep_V_fu_394_p50 : STD_LOGIC_VECTOR (49 downto 0);
    signal p_Result_108_22_fu_386_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_108_21_fu_378_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_108_20_fu_370_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_108_19_fu_362_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_108_18_fu_354_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_108_17_fu_346_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_108_16_fu_338_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_108_15_fu_330_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_108_14_fu_322_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_108_13_fu_314_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_108_12_fu_306_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_108_11_fu_298_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_108_10_fu_290_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_108_s_fu_282_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_108_9_fu_274_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_108_8_fu_266_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_108_7_fu_258_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_108_6_fu_250_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_108_5_fu_242_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_108_4_fu_234_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_108_3_fu_226_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_108_2_fu_218_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_108_1_fu_210_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_fu_202_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state2;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    out_buf_V_24_0_reg_154_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((io_acc_block_signal_op71 = ap_const_logic_0) or (io_acc_block_signal_op41 = ap_const_logic_0))) and (grp_fu_168_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                out_buf_V_24_0_reg_154 <= ap_const_lv16_0;
            elsif ((not(((io_acc_block_signal_op25 = ap_const_logic_0) or ((ap_predicate_op34_write_state2 = ap_const_boolean_1) and (io_acc_block_signal_op34 = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and ((grp_fu_168_p1 = ap_const_lv1_0) or ((tmp_80_fu_181_p3 = ap_const_lv1_1) or (trunc_ln140_fu_177_p1 = ap_const_lv1_1))))) then 
                out_buf_V_24_0_reg_154 <= out_buf_24_V_fu_189_p1;
            end if; 
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (din_1_dout, ap_CS_fsm, ap_CS_fsm_state2, ap_CS_fsm_state3, grp_fu_168_p1, trunc_ln140_fu_177_p1, tmp_80_fu_181_p3, io_acc_block_signal_op25, io_acc_block_signal_op34, ap_predicate_op34_write_state2, io_acc_block_signal_op41, io_acc_block_signal_op71)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state2 => 
                if ((not(((io_acc_block_signal_op25 = ap_const_logic_0) or ((ap_predicate_op34_write_state2 = ap_const_boolean_1) and (io_acc_block_signal_op34 = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state2) and ((grp_fu_168_p1 = ap_const_lv1_0) or ((tmp_80_fu_181_p3 = ap_const_lv1_1) or (trunc_ln140_fu_177_p1 = ap_const_lv1_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                elsif ((not(((io_acc_block_signal_op25 = ap_const_logic_0) or ((ap_predicate_op34_write_state2 = ap_const_boolean_1) and (io_acc_block_signal_op34 = ap_const_logic_0)))) and (tmp_80_fu_181_p3 = ap_const_lv1_0) and (trunc_ln140_fu_177_p1 = ap_const_lv1_0) and (din_1_dout = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if ((not(((io_acc_block_signal_op71 = ap_const_logic_0) or (io_acc_block_signal_op41 = ap_const_logic_0))) and (grp_fu_168_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                elsif ((not(((io_acc_block_signal_op71 = ap_const_logic_0) or (io_acc_block_signal_op41 = ap_const_logic_0))) and (din_1_dout = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);

    ap_block_state2_assign_proc : process(io_acc_block_signal_op25, io_acc_block_signal_op34, ap_predicate_op34_write_state2)
    begin
                ap_block_state2 <= ((io_acc_block_signal_op25 = ap_const_logic_0) or ((ap_predicate_op34_write_state2 = ap_const_boolean_1) and (io_acc_block_signal_op34 = ap_const_logic_0)));
    end process;


    ap_block_state3_assign_proc : process(io_acc_block_signal_op41, io_acc_block_signal_op71)
    begin
                ap_block_state3 <= ((io_acc_block_signal_op71 = ap_const_logic_0) or (io_acc_block_signal_op41 = ap_const_logic_0));
    end process;


    ap_predicate_op34_write_state2_assign_proc : process(din_1_dout, trunc_ln140_fu_177_p1, tmp_80_fu_181_p3)
    begin
                ap_predicate_op34_write_state2 <= ((tmp_80_fu_181_p3 = ap_const_lv1_0) and (trunc_ln140_fu_177_p1 = ap_const_lv1_0) and (din_1_dout = ap_const_lv1_1));
    end process;


    din_0_blk_n_assign_proc : process(din_0_empty_n, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            din_0_blk_n <= din_0_empty_n;
        else 
            din_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    din_0_read_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, io_acc_block_signal_op25, io_acc_block_signal_op34, ap_predicate_op34_write_state2, io_acc_block_signal_op41, io_acc_block_signal_op71)
    begin
        if (((not(((io_acc_block_signal_op71 = ap_const_logic_0) or (io_acc_block_signal_op41 = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((io_acc_block_signal_op25 = ap_const_logic_0) or ((ap_predicate_op34_write_state2 = ap_const_boolean_1) and (io_acc_block_signal_op34 = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            din_0_read <= ap_const_logic_1;
        else 
            din_0_read <= ap_const_logic_0;
        end if; 
    end process;


    din_1_blk_n_assign_proc : process(din_1_empty_n, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            din_1_blk_n <= din_1_empty_n;
        else 
            din_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    din_1_read_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, io_acc_block_signal_op25, io_acc_block_signal_op34, ap_predicate_op34_write_state2, io_acc_block_signal_op41, io_acc_block_signal_op71)
    begin
        if (((not(((io_acc_block_signal_op71 = ap_const_logic_0) or (io_acc_block_signal_op41 = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((io_acc_block_signal_op25 = ap_const_logic_0) or ((ap_predicate_op34_write_state2 = ap_const_boolean_1) and (io_acc_block_signal_op34 = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            din_1_read <= ap_const_logic_1;
        else 
            din_1_read <= ap_const_logic_0;
        end if; 
    end process;


    din_2_blk_n_assign_proc : process(din_2_empty_n, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            din_2_blk_n <= din_2_empty_n;
        else 
            din_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    din_2_read_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, io_acc_block_signal_op25, io_acc_block_signal_op34, ap_predicate_op34_write_state2, io_acc_block_signal_op41, io_acc_block_signal_op71)
    begin
        if (((not(((io_acc_block_signal_op71 = ap_const_logic_0) or (io_acc_block_signal_op41 = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((io_acc_block_signal_op25 = ap_const_logic_0) or ((ap_predicate_op34_write_state2 = ap_const_boolean_1) and (io_acc_block_signal_op34 = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            din_2_read <= ap_const_logic_1;
        else 
            din_2_read <= ap_const_logic_0;
        end if; 
    end process;


    dout_0_blk_n_assign_proc : process(din_1_dout, dout_0_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, trunc_ln140_fu_177_p1, tmp_80_fu_181_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((tmp_80_fu_181_p3 = ap_const_lv1_0) and (trunc_ln140_fu_177_p1 = ap_const_lv1_0) and (din_1_dout = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            dout_0_blk_n <= dout_0_full_n;
        else 
            dout_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    dout_0_din_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, io_acc_block_signal_op25, io_acc_block_signal_op34, ap_predicate_op34_write_state2, io_acc_block_signal_op41, io_acc_block_signal_op71, tmp_data_V_fu_193_p3)
    begin
        if ((not(((io_acc_block_signal_op71 = ap_const_logic_0) or (io_acc_block_signal_op41 = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            dout_0_din <= tmp_data_V_fu_193_p3;
        elsif ((not(((io_acc_block_signal_op25 = ap_const_logic_0) or ((ap_predicate_op34_write_state2 = ap_const_boolean_1) and (io_acc_block_signal_op34 = ap_const_logic_0)))) and (ap_predicate_op34_write_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            dout_0_din <= ap_const_lv400_lc_1;
        else 
            dout_0_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dout_0_write_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, io_acc_block_signal_op25, io_acc_block_signal_op34, ap_predicate_op34_write_state2, io_acc_block_signal_op41, io_acc_block_signal_op71)
    begin
        if (((not(((io_acc_block_signal_op71 = ap_const_logic_0) or (io_acc_block_signal_op41 = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((io_acc_block_signal_op25 = ap_const_logic_0) or ((ap_predicate_op34_write_state2 = ap_const_boolean_1) and (io_acc_block_signal_op34 = ap_const_logic_0)))) and (ap_predicate_op34_write_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            dout_0_write <= ap_const_logic_1;
        else 
            dout_0_write <= ap_const_logic_0;
        end if; 
    end process;


    dout_1_blk_n_assign_proc : process(din_1_dout, dout_1_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, trunc_ln140_fu_177_p1, tmp_80_fu_181_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((tmp_80_fu_181_p3 = ap_const_lv1_0) and (trunc_ln140_fu_177_p1 = ap_const_lv1_0) and (din_1_dout = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            dout_1_blk_n <= dout_1_full_n;
        else 
            dout_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    dout_1_din_assign_proc : process(din_1_dout, ap_CS_fsm_state2, ap_CS_fsm_state3, io_acc_block_signal_op25, io_acc_block_signal_op34, ap_predicate_op34_write_state2, io_acc_block_signal_op41, io_acc_block_signal_op71)
    begin
        if ((not(((io_acc_block_signal_op71 = ap_const_logic_0) or (io_acc_block_signal_op41 = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            dout_1_din <= din_1_dout;
        elsif ((not(((io_acc_block_signal_op25 = ap_const_logic_0) or ((ap_predicate_op34_write_state2 = ap_const_boolean_1) and (io_acc_block_signal_op34 = ap_const_logic_0)))) and (ap_predicate_op34_write_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            dout_1_din <= ap_const_lv1_1;
        else 
            dout_1_din <= "X";
        end if; 
    end process;


    dout_1_write_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, io_acc_block_signal_op25, io_acc_block_signal_op34, ap_predicate_op34_write_state2, io_acc_block_signal_op41, io_acc_block_signal_op71)
    begin
        if (((not(((io_acc_block_signal_op71 = ap_const_logic_0) or (io_acc_block_signal_op41 = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((io_acc_block_signal_op25 = ap_const_logic_0) or ((ap_predicate_op34_write_state2 = ap_const_boolean_1) and (io_acc_block_signal_op34 = ap_const_logic_0)))) and (ap_predicate_op34_write_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            dout_1_write <= ap_const_logic_1;
        else 
            dout_1_write <= ap_const_logic_0;
        end if; 
    end process;


    dout_2_blk_n_assign_proc : process(din_1_dout, dout_2_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, trunc_ln140_fu_177_p1, tmp_80_fu_181_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((tmp_80_fu_181_p3 = ap_const_lv1_0) and (trunc_ln140_fu_177_p1 = ap_const_lv1_0) and (din_1_dout = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            dout_2_blk_n <= dout_2_full_n;
        else 
            dout_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    dout_2_din_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, io_acc_block_signal_op25, io_acc_block_signal_op34, ap_predicate_op34_write_state2, io_acc_block_signal_op41, io_acc_block_signal_op71, tmp_tkeep_V_fu_394_p50)
    begin
        if ((not(((io_acc_block_signal_op71 = ap_const_logic_0) or (io_acc_block_signal_op41 = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            dout_2_din <= tmp_tkeep_V_fu_394_p50;
        elsif ((not(((io_acc_block_signal_op25 = ap_const_logic_0) or ((ap_predicate_op34_write_state2 = ap_const_boolean_1) and (io_acc_block_signal_op34 = ap_const_logic_0)))) and (ap_predicate_op34_write_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            dout_2_din <= ap_const_lv50_0;
        else 
            dout_2_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dout_2_write_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, io_acc_block_signal_op25, io_acc_block_signal_op34, ap_predicate_op34_write_state2, io_acc_block_signal_op41, io_acc_block_signal_op71)
    begin
        if (((not(((io_acc_block_signal_op71 = ap_const_logic_0) or (io_acc_block_signal_op41 = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((io_acc_block_signal_op25 = ap_const_logic_0) or ((ap_predicate_op34_write_state2 = ap_const_boolean_1) and (io_acc_block_signal_op34 = ap_const_logic_0)))) and (ap_predicate_op34_write_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            dout_2_write <= ap_const_logic_1;
        else 
            dout_2_write <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_168_p1 <= din_1_dout;
    io_acc_block_signal_op25 <= (din_2_empty_n and din_1_empty_n and din_0_empty_n);
    io_acc_block_signal_op34 <= (dout_2_full_n and dout_1_full_n and dout_0_full_n);
    io_acc_block_signal_op41 <= (din_2_empty_n and din_1_empty_n and din_0_empty_n);
    io_acc_block_signal_op71 <= (dout_2_full_n and dout_1_full_n and dout_0_full_n);
    out_buf_24_V_fu_189_p1 <= din_0_dout(16 - 1 downto 0);
    p_Result_108_10_fu_290_p3 <= din_2_dout(22 downto 22);
    p_Result_108_11_fu_298_p3 <= din_2_dout(24 downto 24);
    p_Result_108_12_fu_306_p3 <= din_2_dout(26 downto 26);
    p_Result_108_13_fu_314_p3 <= din_2_dout(28 downto 28);
    p_Result_108_14_fu_322_p3 <= din_2_dout(30 downto 30);
    p_Result_108_15_fu_330_p3 <= din_2_dout(32 downto 32);
    p_Result_108_16_fu_338_p3 <= din_2_dout(34 downto 34);
    p_Result_108_17_fu_346_p3 <= din_2_dout(36 downto 36);
    p_Result_108_18_fu_354_p3 <= din_2_dout(38 downto 38);
    p_Result_108_19_fu_362_p3 <= din_2_dout(40 downto 40);
    p_Result_108_1_fu_210_p3 <= din_2_dout(2 downto 2);
    p_Result_108_20_fu_370_p3 <= din_2_dout(42 downto 42);
    p_Result_108_21_fu_378_p3 <= din_2_dout(44 downto 44);
    p_Result_108_22_fu_386_p3 <= din_2_dout(46 downto 46);
    p_Result_108_2_fu_218_p3 <= din_2_dout(4 downto 4);
    p_Result_108_3_fu_226_p3 <= din_2_dout(6 downto 6);
    p_Result_108_4_fu_234_p3 <= din_2_dout(8 downto 8);
    p_Result_108_5_fu_242_p3 <= din_2_dout(10 downto 10);
    p_Result_108_6_fu_250_p3 <= din_2_dout(12 downto 12);
    p_Result_108_7_fu_258_p3 <= din_2_dout(14 downto 14);
    p_Result_108_8_fu_266_p3 <= din_2_dout(16 downto 16);
    p_Result_108_9_fu_274_p3 <= din_2_dout(18 downto 18);
    p_Result_108_s_fu_282_p3 <= din_2_dout(20 downto 20);
    p_Result_s_fu_202_p3 <= din_2_dout(0 downto 0);
    tmp_80_fu_181_p3 <= din_2_dout(47 downto 47);
    tmp_data_V_fu_193_p3 <= (out_buf_V_24_0_reg_154 & din_0_dout);
    tmp_tkeep_V_fu_394_p50 <= ((((((((((((((((((((((((((((((((((((((((((((((((ap_const_lv2_3 & p_Result_108_22_fu_386_p3) & p_Result_108_22_fu_386_p3) & p_Result_108_21_fu_378_p3) & p_Result_108_21_fu_378_p3) & p_Result_108_20_fu_370_p3) & p_Result_108_20_fu_370_p3) & p_Result_108_19_fu_362_p3) & p_Result_108_19_fu_362_p3) & p_Result_108_18_fu_354_p3) & p_Result_108_18_fu_354_p3) & p_Result_108_17_fu_346_p3) & p_Result_108_17_fu_346_p3) & p_Result_108_16_fu_338_p3) & p_Result_108_16_fu_338_p3) & p_Result_108_15_fu_330_p3) & p_Result_108_15_fu_330_p3) & p_Result_108_14_fu_322_p3) & p_Result_108_14_fu_322_p3) & p_Result_108_13_fu_314_p3) & p_Result_108_13_fu_314_p3) & p_Result_108_12_fu_306_p3) & p_Result_108_12_fu_306_p3) & p_Result_108_11_fu_298_p3) & p_Result_108_11_fu_298_p3) & p_Result_108_10_fu_290_p3) & p_Result_108_10_fu_290_p3) & p_Result_108_s_fu_282_p3) & p_Result_108_s_fu_282_p3) & p_Result_108_9_fu_274_p3) & p_Result_108_9_fu_274_p3) & p_Result_108_8_fu_266_p3) & p_Result_108_8_fu_266_p3) & p_Result_108_7_fu_258_p3) & p_Result_108_7_fu_258_p3) & p_Result_108_6_fu_250_p3) & p_Result_108_6_fu_250_p3) & p_Result_108_5_fu_242_p3) & p_Result_108_5_fu_242_p3) & p_Result_108_4_fu_234_p3) & p_Result_108_4_fu_234_p3) & p_Result_108_3_fu_226_p3) & p_Result_108_3_fu_226_p3) & p_Result_108_2_fu_218_p3) & p_Result_108_2_fu_218_p3) & p_Result_108_1_fu_210_p3) & p_Result_108_1_fu_210_p3) & p_Result_s_fu_202_p3) & p_Result_s_fu_202_p3);
    trunc_ln140_fu_177_p1 <= din_2_dout(1 - 1 downto 0);
end behav;
